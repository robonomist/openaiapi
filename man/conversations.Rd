% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conversations.R
\name{conversations}
\alias{conversations}
\alias{oai_create_conversation}
\alias{oai_get_conversation}
\alias{oai_update_conversation}
\alias{oai_delete_conversation}
\alias{oai_list_conversation_items}
\alias{oai_create_conversation_items}
\alias{oai_retrieve_conversation_item}
\alias{oai_delete_conversation_item}
\title{Conversations API}
\usage{
oai_create_conversation(
  items = NULL,
  metadata = NULL,
  .classify_response = TRUE,
  .async = FALSE
)

oai_get_conversation(
  conversation_id,
  .classify_response = TRUE,
  .async = FALSE
)

oai_update_conversation(
  conversation_id,
  metadata = NULL,
  .classify_response = TRUE,
  .async = FALSE
)

oai_delete_conversation(conversation_id, .async = FALSE)

oai_list_conversation_items(
  conversation_id,
  limit = 20,
  order = c("desc", "asc"),
  after = NULL,
  include = NULL,
  .classify_response = TRUE,
  .async = FALSE
)

oai_create_conversation_items(
  conversation_id,
  items,
  include = NULL,
  .classify_response = TRUE,
  .async = FALSE
)

oai_retrieve_conversation_item(
  conversation_id,
  item_id,
  include = NULL,
  .classify_response = TRUE,
  .async = FALSE
)

oai_delete_conversation_item(
  conversation_id,
  item_id,
  .classify_response = TRUE,
  .async = FALSE
)
}
\arguments{
\item{items}{List. The items to add to the conversation. You may add up to 20 items at a time.}

\item{metadata}{List. Optional. A named list of at most 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.}

\item{.classify_response}{Logical. If \code{TRUE} (default), the response is classified as an R6 object. If \code{FALSE}, the response is returned as a list.}

\item{.async}{Logical. If \code{TRUE}, the request is performed asynchronously.}

\item{conversation_id}{Character. The ID of the conversation.}

\item{limit}{Integer. Optional. A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.}

\item{order}{Character. Optional. Sort order by the created_at timestamp of the objects. \code{"asc"} for ascending order and \code{"desc"} for descending order.}

\item{after}{Character. Optional. A cursor for use in pagination. \code{after} is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include \code{after = "obj_foo"} in order to fetch the next page of the list.}

\item{include}{Character vector. Specify additional output data to include in the model response.}

\item{item_id}{Character. The ID of the conversation item.}
}
\value{
\itemize{
\item \code{oai_create_conversation()} - A \code{Conversation} object.
}

\itemize{
\item \code{oai_get_conversation()} - A \code{Conversation} object.
}

\itemize{
\item \code{oai_update_conversation()} - The updated \code{Conversation} object.
}

\itemize{
\item \code{oai_delete_conversation()} - A success message.
}

\itemize{
\item \code{oai_list_conversation_items()} - A list object containing Conversation items.
}

\itemize{
\item \code{oai_create_conversation_items()} - The list of added items.
}

\itemize{
\item \code{oai_retrieve_conversation_item()} - A conversation item.
}

\itemize{
\item \code{oai_delete_conversation_item()} - An updated \code{Conversation} object.
}
}
\description{
Based on the OpenAI API openapi specification.

Create a conversation

Retrieve a conversation

Update a conversation

Delete a conversation

List conversation items

Create conversation items

Retrieve an conversation item

Delete a conversation item
}
