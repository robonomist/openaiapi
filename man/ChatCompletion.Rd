% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chat.R
\name{ChatCompletion}
\alias{ChatCompletion}
\alias{ChatCompletionStream}
\title{ChatCompletion R6 class}
\description{
ChatCompletion R6 class

ChatCompletion R6 class

ChatCompletionStream R6 class

ChatCompletionStream R6 class
}
\section{Super class}{
\code{openaiapi::Utils} -> \code{ChatCompletion}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{A unique identifier for the chat completion.}

\item{\code{choices}}{A list of chat completion choices. Can be more than one if n is greater than 1.}

\item{\code{created}}{The Unix timestamp (in seconds) of when the chat completion was created.}

\item{\code{model}}{The model used for the chat completion.}

\item{\code{service_tier}}{The service tier used for processing the request.}

\item{\code{system_fingerprint}}{This fingerprint represents the backend configuration that the model runs with.}

\item{\code{usage}}{Usage statistics for the completion request.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ChatCompletion-new}{\code{ChatCompletion$new()}}
\item \href{#method-ChatCompletion-get}{\code{ChatCompletion$get()}}
\item \href{#method-ChatCompletion-update}{\code{ChatCompletion$update()}}
\item \href{#method-ChatCompletion-delete}{\code{ChatCompletion$delete()}}
\item \href{#method-ChatCompletion-get_chat_messages}{\code{ChatCompletion$get_chat_messages()}}
\item \href{#method-ChatCompletion-content_text}{\code{ChatCompletion$content_text()}}
\item \href{#method-ChatCompletion-print}{\code{ChatCompletion$print()}}
\item \href{#method-ChatCompletion-clone}{\code{ChatCompletion$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="openaiapi" data-topic="Utils" data-id="store_response"><a href='../../openaiapi/html/Utils.html#method-Utils-store_response'><code>openaiapi::Utils$store_response()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChatCompletion-new"></a>}}
\if{latex}{\out{\hypertarget{method-ChatCompletion-new}{}}}
\subsection{Method \code{new()}}{
Initialize a ChatCompletion object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChatCompletion$new(
  completion_id = NULL,
  messages = NULL,
  ...,
  resp = NULL,
  .async = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{completion_id}}{A unique identifier for the chat completion.}

\item{\code{messages}}{A list of messages comprising the conversation so far.}

\item{\code{...}}{Additional parameters passed to API functions}

\item{\code{resp}}{A response object.}

\item{\code{.async}}{Logical. If TRUE, the API call will be asynchronous.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChatCompletion-get"></a>}}
\if{latex}{\out{\hypertarget{method-ChatCompletion-get}{}}}
\subsection{Method \code{get()}}{
Get the chat completion object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChatCompletion$get()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChatCompletion-update"></a>}}
\if{latex}{\out{\hypertarget{method-ChatCompletion-update}{}}}
\subsection{Method \code{update()}}{
Update the chat completion object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChatCompletion$update(metadata)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{metadata}}{List of key-value pairs.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChatCompletion-delete"></a>}}
\if{latex}{\out{\hypertarget{method-ChatCompletion-delete}{}}}
\subsection{Method \code{delete()}}{
Delete the chat completion object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChatCompletion$delete()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChatCompletion-get_chat_messages"></a>}}
\if{latex}{\out{\hypertarget{method-ChatCompletion-get_chat_messages}{}}}
\subsection{Method \code{get_chat_messages()}}{
Get the messages in the chat completion.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChatCompletion$get_chat_messages(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Additional parameters passed to API functions}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChatCompletion-content_text"></a>}}
\if{latex}{\out{\hypertarget{method-ChatCompletion-content_text}{}}}
\subsection{Method \code{content_text()}}{
Get the messages in the chat completion.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChatCompletion$content_text(choice = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{choice}}{Integer. The choice number to get the message from.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChatCompletion-print"></a>}}
\if{latex}{\out{\hypertarget{method-ChatCompletion-print}{}}}
\subsection{Method \code{print()}}{
Print the chat completion details.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChatCompletion$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Additional parameters passed to API functions}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChatCompletion-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ChatCompletion-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChatCompletion$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{openaiapi::Utils} -> \code{\link[openaiapi:ChatCompletion]{openaiapi::ChatCompletion}} -> \code{ChatCompletionStream}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ChatCompletionStream-new}{\code{ChatCompletionStream$new()}}
\item \href{#method-ChatCompletionStream-stream_async}{\code{ChatCompletionStream$stream_async()}}
\item \href{#method-ChatCompletionStream-do_tool_calls}{\code{ChatCompletionStream$do_tool_calls()}}
\item \href{#method-ChatCompletionStream-clone}{\code{ChatCompletionStream$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="openaiapi" data-topic="Utils" data-id="store_response"><a href='../../openaiapi/html/Utils.html#method-Utils-store_response'><code>openaiapi::Utils$store_response()</code></a></span></li>
<li><span class="pkg-link" data-pkg="openaiapi" data-topic="ChatCompletion" data-id="content_text"><a href='../../openaiapi/html/ChatCompletion.html#method-ChatCompletion-content_text'><code>openaiapi::ChatCompletion$content_text()</code></a></span></li>
<li><span class="pkg-link" data-pkg="openaiapi" data-topic="ChatCompletion" data-id="delete"><a href='../../openaiapi/html/ChatCompletion.html#method-ChatCompletion-delete'><code>openaiapi::ChatCompletion$delete()</code></a></span></li>
<li><span class="pkg-link" data-pkg="openaiapi" data-topic="ChatCompletion" data-id="get"><a href='../../openaiapi/html/ChatCompletion.html#method-ChatCompletion-get'><code>openaiapi::ChatCompletion$get()</code></a></span></li>
<li><span class="pkg-link" data-pkg="openaiapi" data-topic="ChatCompletion" data-id="get_chat_messages"><a href='../../openaiapi/html/ChatCompletion.html#method-ChatCompletion-get_chat_messages'><code>openaiapi::ChatCompletion$get_chat_messages()</code></a></span></li>
<li><span class="pkg-link" data-pkg="openaiapi" data-topic="ChatCompletion" data-id="print"><a href='../../openaiapi/html/ChatCompletion.html#method-ChatCompletion-print'><code>openaiapi::ChatCompletion$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="openaiapi" data-topic="ChatCompletion" data-id="update"><a href='../../openaiapi/html/ChatCompletion.html#method-ChatCompletion-update'><code>openaiapi::ChatCompletion$update()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChatCompletionStream-new"></a>}}
\if{latex}{\out{\hypertarget{method-ChatCompletionStream-new}{}}}
\subsection{Method \code{new()}}{
Initialize a ChatCompletionStream object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChatCompletionStream$new(stream_reader)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{stream_reader}}{A StreamReader object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChatCompletionStream-stream_async"></a>}}
\if{latex}{\out{\hypertarget{method-ChatCompletionStream-stream_async}{}}}
\subsection{Method \code{stream_async()}}{
Get the chat completion object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChatCompletionStream$stream_async(callback)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{callback}}{A function that is called on each event, taking the updated \code{choices} field as an argument.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChatCompletionStream-do_tool_calls"></a>}}
\if{latex}{\out{\hypertarget{method-ChatCompletionStream-do_tool_calls}{}}}
\subsection{Method \code{do_tool_calls()}}{
Get the chat completion object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChatCompletionStream$do_tool_calls(env = parent.env())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{env}}{The environment to use for tool calls.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChatCompletionStream-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ChatCompletionStream-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChatCompletionStream$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
