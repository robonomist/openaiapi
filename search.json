[{"path":"https://robonomist.github.io/openaiapi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 openaiapi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://robonomist.github.io/openaiapi/articles/assistants.html","id":"assistants","dir":"Articles","previous_headings":"","what":"Assistants","title":"Using the Assistants API","text":"can create new assistant oai_create_assistant function: return R6 Assistant object can use interact assistant. retrieve existing assistant, can use oai_retrieve_assistant function: Alternatively can use Assistant class constructor directly: modify assistant, can use oai_modify_assistant function ore modify method Assistant object: delete assistant, can use oai_delete_assistant function delete method Assistant object.","code":"oai_create_assistant(model = \"gpt-4o\", name = \"my-assistant\") oai_retrieve_assistant(assistant_id = \"your-assistant-id\") ## Create a new assistant Assistant$new(model = \"gpt-4o\", name = \"my-assistant\")  ## Retrieve an existing assistant Assistant$new(assistant_id = \"*your-assistant-id*\") oai_modify_assistant(   assistant_id = \"your-assistant-id\",   instructions =  = \"new-instructions\" ) ## or my_assistant <- Assistant$new(assistant_id = \"your-assistant-id\") my_assistant$modify(instructions = \"new-instructions\")"},{"path":"https://robonomist.github.io/openaiapi/articles/assistants.html","id":"threads","dir":"Articles","previous_headings":"","what":"Threads","title":"Using the Assistants API","text":"Thread represents conversation user assistant. can create new thread oai_create_thread function via Thread R6 class constructor: run thread, can use run method Thread object: can also create thread run one go:","code":"my_thread <- oai_create_thread(messages = list(   oai_message(\"Juha has entered the chat!\", role = \"assistant\"),   oai_message(\"Hello!\", role = \"user\") )) run <- thread$run(assistant = \"your-assistant-id\") ## or run <- thread$run(assistant = my_assistant) run <- my_assistant$thread_and_run(messages = list(   oai_message(\"Juha has entered the chat!\", role = \"assistant\"),   oai_message(\"Hello!\", role = \"user\") ))"},{"path":"https://robonomist.github.io/openaiapi/articles/assistants.html","id":"runs","dir":"Articles","previous_headings":"","what":"Runs","title":"Using the Assistants API","text":"Runs represent execution assistant specific thread. can retrieve run oai_create_run() function via Run R6 class constructor: can retrieve status run API retrieve_status() method: can wait run complete wait() method: Let’s put together:","code":"run <- oai_create_run(   thread_id = \"your-thread-id\",   assistant_id = \"your-assistant-id\" )  run <- Run$new(thread = \"your-thread-id\", assistant = \"your-assistant-id\") ## or run <- Run$new(thread = my_thread, assistant = my_assistant) run$retrieve_status() run$wait() ## or directly wait for the messages run$wait()$thread()$list_messages() my_assistant <- Assistant$new(   model = \"gpt-4o\",   name = \"my-assistant\",   instructions = \"Answer back when the user says hello.\" )  my_thread <- Thread$new() my_thread$create_message(\"Hello my assistant!\")  my_run <- Run$new(thread = my_thread, assistant = my_assistant)$wait()  messages <- my_thread$list_messages()  messages[[1]]$content_text() #> [1] \"Hello! How can I assist you today?\"  my_thread$create_message(\"Goodbye my assistant!\")$run(my_assistant)$wait()  my_thread$list_messages()[[1]]$content_text() #> [1] \"Goodbye! If you need any help in the future, just let me know. Have a great day!\"  my_assistant$delete()"},{"path":"https://robonomist.github.io/openaiapi/articles/assistants.html","id":"function-tools","dir":"Articles","previous_headings":"","what":"Function tools","title":"Using the Assistants API","text":"assistant uses function tools, wait() method automatically execute required function tools finding R functions name (searching calling environment default). want use different environment, can specify env argument. can specify function tools creating assistant using oai_function_tool() oai_function_tool_parameters() functions:","code":"package_version <- function(package) {   as.character(packageVersion(package)) } my_tool <- oai_function_tool(   name = \"package_version\",   description = \"Get the version of a R packages\",   oai_function_tool_parameter(     name = \"package\",     type = \"string\",     description = \"Name of the package\",     required = TRUE   ) )  my_test_assistant <- Assistant$new(   model = \"gpt-4o\",   name = \"Test assistant\",   instructions = \"You will provide the version of R packages when the user asks. Use the `package_version` function tool.\",   tools = list(my_tool) )  messages <- my_test_assistant$thread_and_run(   messages = list(     oai_message(\"What is the version of openaiapi?\", role = \"user\")   ) )$wait()$thread()$list_messages()  messages[[1]]$content_text() #> \"The version of the `openaiapi` package is 0.0.0.9100.\"  ## Async streaming my_test_assistant$thread_and_run(   messages = list(     oai_message(       \"What is the version of openaiapi? Write a poem about it.\",       role = \"user\"     )   ),   stream = TRUE, .async = TRUE )$stream_async(   on_message_delta = function(data) {     cat(data$delta$content[[1]]$text$value)   } )  my_test_assistant$delete()"},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/articles/assistants.html","id":"file-uploads","dir":"Articles","previous_headings":"Files","what":"File uploads","title":"Using the Assistants API","text":"can upload files OpenAI API oai_upload_file() function creating File object:","code":"file <- oai_upload_file(\"path/to/file\") ## or file <- File$new(\"path/to/file\")"},{"path":"https://robonomist.github.io/openaiapi/articles/assistants.html","id":"vector-store","dir":"Articles","previous_headings":"Files","what":"Vector store","title":"Using the Assistants API","text":"Vector Store API allows store retrieve vectors. can create new vector store oai_create_vector_store() function creating VectorStore object:","code":"my_vector_store <- oai_create_vector_store(name = \"my-vector-store\") ## or my_vector_store <- VectorStore$new(name = \"my-vector-store\")"},{"path":"https://robonomist.github.io/openaiapi/articles/shiny.html","id":"example-with-shinychat","dir":"Articles","previous_headings":"","what":"Example with shinychat","title":"Example with shiny","text":"","code":"library(shiny) library(bslib) library(shinychat) library(openaiapi)  ui <- page_fluid(   shinychat::chat_ui(\"chat\") ) server <- function(input, output, session) {   chat <- oai_create_model_response(     instructions = \"You're a trickster who answers in riddles.\",     stream = TRUE,     .async = TRUE,     .perform_query = FALSE   )   observeEvent(input$chat_user_input, {     chat$       respond(input = input$chat_user_input)$       async_generator()$       then(function(stream) {         shinychat::chat_append(\"chat\", stream)       })   }) }  shinyApp(ui, server)"},{"path":"https://robonomist.github.io/openaiapi/articles/shiny.html","id":"low-level-example","dir":"Articles","previous_headings":"","what":"Low level example","title":"Example with shiny","text":"example Shiny app uses openaiapi stream completion asynchonously. completion rendered markdown. stream non-blocking, app displays timer updates every 100 milliseconds completion generated. using bslib, default busy indicator recalculating output opacity fade, work well text streaming. can turn busyIndicatorOptions(fade_opacity = 1).","code":"library(openaiapi) library(shiny) library(bslib)  my_prompt <- \"This is a test. Can you produce a long text that takes at least 10 seconds to generate and uses markdown notation?\"  ui <- fixedPage(   input_task_button(\"prompt\", \"Prompt\"),   uiOutput(\"timer\"),   uiOutput(\"answer\") )  server <- function(input, output, session) {    content <- reactiveVal()   start_time <- NULL    task <- ExtendedTask$new(function(prompt) {     oai_create_chat_completion(       prompt,       stream = TRUE,       .async = TRUE     )$stream_async(       callback = function(choices) {         content(choices[[1]]$message$content)       }     )   }) |>     bind_task_button(\"prompt\")    observeEvent(input$prompt, {     start_time <<- Sys.time()     task$invoke(my_prompt)   })    output$timer <- renderUI({       if (task$status() == \"running\") {         invalidateLater(100)       } else if (task$status() %in% c(\"initial\", \"error\")) {         req(FALSE)       }       time <-         as.numeric(difftime(Sys.time(), start_time, units = \"secs\")) |>         format(digits = 1, nsmall = 2)       p(paste(\"Time elapsed:\", time,\"seconds\"))   })    output$answer <- renderUI({     tryCatch(       markdown(content()),       error = function(e) {         req(FALSE, cancelOutput = TRUE)       }     )   }) } shinyApp(ui, server) ui <- page_fixed(   busyIndicatorOptions(fade_opacity = 1),   input_task_button(\"prompt\", \"Prompt\"),   uiOutput(\"timer\"),   uiOutput(\"answer\") ) shinyApp(ui, server)"},{"path":"https://robonomist.github.io/openaiapi/articles/shiny.html","id":"todo","dir":"Articles","previous_headings":"Low level example","what":"TODO:","title":"Example with shiny","text":"Currently seems way open stream concurrently httr2::req_perform_connection(req, blocking = FALSE). Therefore, beginning stream, 0.5-1 second delay R blocked.","code":""},{"path":"https://robonomist.github.io/openaiapi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Juha Itkonen. Author, maintainer.","code":""},{"path":"https://robonomist.github.io/openaiapi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Itkonen J (2025). openaiapi: R Interface OpenAI API. R package version 0.0.8, https://github.com/robonomist/openaiapi.","code":"@Manual{,   title = {openaiapi: R Interface to the OpenAI API},   author = {Juha Itkonen},   year = {2025},   note = {R package version 0.0.8},   url = {https://github.com/robonomist/openaiapi}, }"},{"path":"https://robonomist.github.io/openaiapi/index.html","id":"openaiapi","dir":"","previous_headings":"","what":"R Interface to the OpenAI API","title":"R Interface to the OpenAI API","text":"openaiapi R package provides comprehensive faithful interface OpenAI API. closely mirrors API’s structure offering R6 classes convenient handling API objects.","code":""},{"path":"https://robonomist.github.io/openaiapi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Interface to the OpenAI API","text":"can install development version openaiapi GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"robonomist/openaiapi\")"},{"path":"https://robonomist.github.io/openaiapi/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R Interface to the OpenAI API","text":"use OpenAI API, need API key. can get one signing OpenAI. Alternatively, can set OPENAI_API_KEY environment variable, read package load time.","code":"library(openaiapi) oai_set_api_key(\"your-api-key\")"},{"path":"https://robonomist.github.io/openaiapi/index.html","id":"chat-completions","dir":"","previous_headings":"Usage","what":"Chat completions","title":"R Interface to the OpenAI API","text":"chat completions API allows generate chat completions. can use oai_create_chat_completion function generate completions:","code":"r <- oai_create_chat_completion(   \"Hello, how are you?\",   model = \"gpt-4o\" ) r # A ChatCompletion R6 object r$content_text()  oai_create_chat_completion(   messages = list(     oai_message(\"Hello, how are you?\", role = \"user\"),     oai_message(\"I'm fine, thank you!\", role = \"assistant\"),     oai_message(\"Can you tell me a joke?\", role = \"user\")   ),   model = \"gpt-4o\" )$content_text()"},{"path":"https://robonomist.github.io/openaiapi/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"R Interface to the OpenAI API","text":"Use function tools Assistants API vignette(\"assistants\") Stream asynchronously Shiny vignette(\"shiny\")","code":""},{"path":"https://robonomist.github.io/openaiapi/index.html","id":"todo","dir":"","previous_headings":"","what":"Todo:","title":"R Interface to the OpenAI API","text":"Implement Responses API Implement Administration API Implement Images API Implement Moderations API Implement Realtime API Add tests Implement streaming","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":null,"dir":"Reference","previous_headings":"","what":"Assistant R6 class — Assistant","title":"Assistant R6 class — Assistant","text":"class provides methods interact OpenAI Assistant API.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Assistant R6 class — Assistant","text":"openaiapi::Utils -> Assistant","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Assistant R6 class — Assistant","text":"id ID assistant. created_at creation time assistant. name name assistant. description description assistant. model ID model use. can use oai_list_models() function see available models. instructions system instructions assistant uses. tools list tool enabled assistant. tool_resources set resources used assistant's tools. metadata Set 16 key-value pairs can attached object. temperature Sampling temperature. top_p alternative sampling temperature, called nucleus sampling. response_format response format assistant.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Assistant R6 class — Assistant","text":"Assistant$new() Assistant$modify() Assistant$retrieve() Assistant$delete() Assistant$print() Assistant$thread_and_run() Assistant$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Assistant R6 class — Assistant","text":"Initializes OpenAI Assistant object. must provide either assistant ID model. provide assistant ID, assistant retrieved API. provide model, new assistant created, ... argument used pass additional arguments oai_create_assistant() function.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assistant R6 class — Assistant","text":"","code":"Assistant$new(   assistant_id = NULL,   model = NULL,   ...,   resp = NULL,   .async = FALSE )"},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assistant R6 class — Assistant","text":"assistant_id Character. ID assistant retrieve. model Character. ID model use. can use oai_list_models() see available models. ... Additional arguments passed oai_*_assistant() functions. resp List. assistant's properties API response. .async Logical. TRUE, requests made asynchronously.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Assistant R6 class — Assistant","text":"instance OpenAI_Assistant class.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"method-modify-","dir":"Reference","previous_headings":"","what":"Method modify()","title":"Assistant R6 class — Assistant","text":"Modify assistant's properties. ... argument used pass additional arguments oai_modify_assistant() function.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Assistant R6 class — Assistant","text":"","code":"Assistant$modify(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assistant R6 class — Assistant","text":"... Additional arguments passed oai_*_assistant() functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"Assistant R6 class — Assistant","text":"Retrieve assistant's properties API.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Assistant R6 class — Assistant","text":"","code":"Assistant$retrieve()"},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Assistant R6 class — Assistant","text":"--date version OpenAI_Assistant instance. Delete assistant","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Assistant R6 class — Assistant","text":"","code":"Assistant$delete()"},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Assistant R6 class — Assistant","text":"Deletion status Print assistant's details","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Assistant R6 class — Assistant","text":"","code":"Assistant$print(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assistant R6 class — Assistant","text":"... Additional arguments (unused).","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Assistant R6 class — Assistant","text":"OpenAI_Assistant instance. Create thread run assistant","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Assistant R6 class — Assistant","text":"","code":"Assistant$thread_and_run(thread = NULL, messages = NULL, ..., .async = NULL)"},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assistant R6 class — Assistant","text":"thread oai_thread object. messages Alternatively, list messages create thread. ... Additional arguments passed oai_create_thread_and_run(). .async Logical. TRUE, requests made asynchronously.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Assistant R6 class — Assistant","text":"response thread creation run.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Assistant R6 class — Assistant","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Assistant R6 class — Assistant","text":"","code":"Assistant$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/Assistant.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assistant R6 class — Assistant","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":null,"dir":"Reference","previous_headings":"","what":"ChatCompletion R6 class — ChatCompletion","title":"ChatCompletion R6 class — ChatCompletion","text":"ChatCompletion R6 class ChatCompletion R6 class","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ChatCompletion R6 class — ChatCompletion","text":"openaiapi::Utils -> ChatCompletion","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ChatCompletion R6 class — ChatCompletion","text":"id unique identifier chat completion. choices list chat completion choices. Can one n greater 1. created Unix timestamp (seconds) chat completion created. model model used chat completion. service_tier service tier used processing request. system_fingerprint fingerprint represents backend configuration model runs . usage Usage statistics completion request.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ChatCompletion R6 class — ChatCompletion","text":"ChatCompletion$new() ChatCompletion$get() ChatCompletion$update() ChatCompletion$delete() ChatCompletion$get_chat_messages() ChatCompletion$content_text() ChatCompletion$print() ChatCompletion$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ChatCompletion R6 class — ChatCompletion","text":"Initialize ChatCompletion object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatCompletion R6 class — ChatCompletion","text":"","code":"ChatCompletion$new(   completion_id = NULL,   messages = NULL,   ...,   resp = NULL,   .async = FALSE )"},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChatCompletion R6 class — ChatCompletion","text":"completion_id unique identifier chat completion. messages list messages comprising conversation far. ... Additional parameters passed API functions resp response object. .async Logical. TRUE, API call asynchronous.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"ChatCompletion R6 class — ChatCompletion","text":"Get chat completion object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatCompletion R6 class — ChatCompletion","text":"","code":"ChatCompletion$get()"},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"ChatCompletion R6 class — ChatCompletion","text":"Update chat completion object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatCompletion R6 class — ChatCompletion","text":"","code":"ChatCompletion$update(metadata)"},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChatCompletion R6 class — ChatCompletion","text":"metadata List key-value pairs.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"method-delete-","dir":"Reference","previous_headings":"","what":"Method delete()","title":"ChatCompletion R6 class — ChatCompletion","text":"Delete chat completion object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatCompletion R6 class — ChatCompletion","text":"","code":"ChatCompletion$delete()"},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"method-get-chat-messages-","dir":"Reference","previous_headings":"","what":"Method get_chat_messages()","title":"ChatCompletion R6 class — ChatCompletion","text":"Get messages chat completion.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatCompletion R6 class — ChatCompletion","text":"","code":"ChatCompletion$get_chat_messages(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChatCompletion R6 class — ChatCompletion","text":"... Additional parameters passed API functions","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"method-content-text-","dir":"Reference","previous_headings":"","what":"Method content_text()","title":"ChatCompletion R6 class — ChatCompletion","text":"Get messages chat completion.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatCompletion R6 class — ChatCompletion","text":"","code":"ChatCompletion$content_text(choice = 1)"},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChatCompletion R6 class — ChatCompletion","text":"choice Integer. choice number get message .","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"ChatCompletion R6 class — ChatCompletion","text":"Print chat completion details.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatCompletion R6 class — ChatCompletion","text":"","code":"ChatCompletion$print(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChatCompletion R6 class — ChatCompletion","text":"... Additional parameters passed API functions","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ChatCompletion R6 class — ChatCompletion","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatCompletion R6 class — ChatCompletion","text":"","code":"ChatCompletion$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletion.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChatCompletion R6 class — ChatCompletion","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":null,"dir":"Reference","previous_headings":"","what":"ChatCompletionStream R6 class — ChatCompletionStream","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"ChatCompletionStream R6 class ChatCompletionStream R6 class","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"openaiapi::Utils -> openaiapi::ChatCompletion -> ChatCompletionStream","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"openaiapi::ChatCompletion$content_text() openaiapi::ChatCompletion$delete() openaiapi::ChatCompletion$get() openaiapi::ChatCompletion$get_chat_messages() openaiapi::ChatCompletion$print() openaiapi::ChatCompletion$update()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"ChatCompletionStream$new() ChatCompletionStream$stream_async() ChatCompletionStream$do_tool_calls() ChatCompletionStream$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"Initialize ChatCompletionStream object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"","code":"ChatCompletionStream$new(stream_reader)"},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"stream_reader StreamReader object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"method-stream-async-","dir":"Reference","previous_headings":"","what":"Method stream_async()","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"Get chat completion object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"","code":"ChatCompletionStream$stream_async(callback)"},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"callback function called event, taking updated choices field argument.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"method-do-tool-calls-","dir":"Reference","previous_headings":"","what":"Method do_tool_calls()","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"Get chat completion object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"","code":"ChatCompletionStream$do_tool_calls(env = parent.env())"},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"env environment use tool calls.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"","code":"ChatCompletionStream$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/ChatCompletionStream.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChatCompletionStream R6 class — ChatCompletionStream","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class representing an Embedding in the OpenAI API — Embedding","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"R6 class representing Embedding OpenAI API R6 class representing Embedding OpenAI API","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"openaiapi::Utils -> Embedding","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"embedding embedding vector. index index embedding list embeddings.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"Embedding$new() Embedding$print() Embedding$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"Initialize Embedding object","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"","code":"Embedding$new(input, model, ..., resp = NULL, .async = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"input Character. Input text embed. model Character. ID model used generate embedding. ... Additional arguments passed API functions. resp list. response object OpenAI API containing details embedding. .async Logical. TRUE, function return promise.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"new instance Embedding object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"Print Embedding object","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"","code":"Embedding$print(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"... Unused.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"","code":"Embedding$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/Embedding.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing an Embedding in the OpenAI API — Embedding","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenAI File Interface — File","title":"OpenAI File Interface — File","text":"OpenAI File Interface OpenAI File Interface","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenAI File Interface — File","text":"class provides methods interact files OpenAI API.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"OpenAI File Interface — File","text":"openaiapi::Utils -> File","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"OpenAI File Interface — File","text":"id ID file. bytes size file bytes. created_at creation time file. filename name file. purpose purpose file. Retrieve file's properties API","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"OpenAI File Interface — File","text":"File$new() File$retrieve() File$delete() File$print() File$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"OpenAI File Interface — File","text":"Initializes File object","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenAI File Interface — File","text":"","code":"File$new(file_id = NULL, path = NULL, ..., resp = NULL, .async = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenAI File Interface — File","text":"file_id ID file initialize. path path file upload. ... Additional arguments passed API functions. resp list containing file properties API response. .async Logical. TRUE, function return promise.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenAI File Interface — File","text":"instance File class.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenAI File Interface — File","text":"","code":"File$retrieve()"},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenAI File Interface — File","text":"--date File instance. Delete file","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenAI File Interface — File","text":"","code":"File$delete()"},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenAI File Interface — File","text":"NULL Print file's details","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenAI File Interface — File","text":"","code":"File$print(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenAI File Interface — File","text":"... Additional arguments (unused).","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenAI File Interface — File","text":"File instance.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"OpenAI File Interface — File","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenAI File Interface — File","text":"","code":"File$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/File.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenAI File Interface — File","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":null,"dir":"Reference","previous_headings":"","what":"FineTuningJob R6 class — FineTuningJob","title":"FineTuningJob R6 class — FineTuningJob","text":"FineTuningJob R6 class FineTuningJob R6 class","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FineTuningJob R6 class — FineTuningJob","text":"openaiapi::Utils -> FineTuningJob","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"FineTuningJob R6 class — FineTuningJob","text":"id ID fine-tuning job. created_at time fine-tuning job created. error error message, . fine_tuned_model name fine-tuned model. finished_at time fine-tuning job finished. hyperparameters hyperparameters used fine-tuning job. model name model fine-tune. object object type. organization_id ID organization. result_files result files. status status fine-tuning job. trained_tokens number tokens trained. training_file ID training file. validation_file ID validation file. integrations integrations enabled fine-tuning job. seed seed used fine-tuning job. estimated_finish estimated finish time.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FineTuningJob R6 class — FineTuningJob","text":"FineTuningJob$new() FineTuningJob$list_events() FineTuningJob$list_checkpoints() FineTuningJob$retrieve() FineTuningJob$cancel() FineTuningJob$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FineTuningJob R6 class — FineTuningJob","text":"Initialize FineTuningJob object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FineTuningJob R6 class — FineTuningJob","text":"","code":"FineTuningJob$new(   model = NULL,   training_file = NULL,   ...,   resp = NULL,   .async = FALSE )"},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FineTuningJob R6 class — FineTuningJob","text":"model name model fine-tune. training_file ID uploaded file contains training data. ... Additional parameters passed API functions. resp response API. .async Logical. TRUE, function return promise.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"method-list-events-","dir":"Reference","previous_headings":"","what":"Method list_events()","title":"FineTuningJob R6 class — FineTuningJob","text":"List fine-tuning events.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FineTuningJob R6 class — FineTuningJob","text":"","code":"FineTuningJob$list_events(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FineTuningJob R6 class — FineTuningJob","text":"... Additional parameters passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"method-list-checkpoints-","dir":"Reference","previous_headings":"","what":"Method list_checkpoints()","title":"FineTuningJob R6 class — FineTuningJob","text":"List fine-tuning checkpoints.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FineTuningJob R6 class — FineTuningJob","text":"","code":"FineTuningJob$list_checkpoints(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FineTuningJob R6 class — FineTuningJob","text":"... Additional parameters passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"FineTuningJob R6 class — FineTuningJob","text":"Retrieve fine-tuning job.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FineTuningJob R6 class — FineTuningJob","text":"","code":"FineTuningJob$retrieve()"},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"method-cancel-","dir":"Reference","previous_headings":"","what":"Method cancel()","title":"FineTuningJob R6 class — FineTuningJob","text":"Cancel fine-tuning job.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FineTuningJob R6 class — FineTuningJob","text":"","code":"FineTuningJob$cancel()"},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FineTuningJob R6 class — FineTuningJob","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"FineTuningJob R6 class — FineTuningJob","text":"","code":"FineTuningJob$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/FineTuningJob.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"FineTuningJob R6 class — FineTuningJob","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":null,"dir":"Reference","previous_headings":"","what":"Message R6 class — Message","title":"Message R6 class — Message","text":"Message R6 class Message R6 class","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Message R6 class — Message","text":"openaiapi::Utils -> Message","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Message R6 class — Message","text":"id Character. ID message. created_at POSIXct. time message created. thread_id Character. ID thread message belongs . status Character. status message. incomplete_details List. Details message incomplete. completed_at POSIXct. time message completed. incomplete_at POSIXct. time message marked incomplete. role Character. role sender. content List. content message. assistant_id Character. applicable, ID assistant authored message. run_id Character. ID run associated creation message. Value null messages created manually using create message create thread endpoints. attachments List. Attachments message. metadata List. Metadata associated message.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Message R6 class — Message","text":"Message$new() Message$retrieve() Message$modify() Message$delete() Message$content_text() Message$thread() Message$assistant() Message$add_delta() Message$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Message R6 class — Message","text":"Initialize Message object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Message R6 class — Message","text":"","code":"Message$new(   message_id = NULL,   thread_id = NULL,   ...,   resp = NULL,   .async = FALSE )"},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Message R6 class — Message","text":"message_id Character. ID message. thread_id Character. ID thread. ... Additional parameters passed API call. resp List. response OpenAI API. .async Logical. TRUE, API call asynchronous.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"Message R6 class — Message","text":"Retrieve message.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Message R6 class — Message","text":"","code":"Message$retrieve()"},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"method-modify-","dir":"Reference","previous_headings":"","what":"Method modify()","title":"Message R6 class — Message","text":"Modify message metadata.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Message R6 class — Message","text":"","code":"Message$modify(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Message R6 class — Message","text":"... Additional parameters passed API call.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"method-delete-","dir":"Reference","previous_headings":"","what":"Method delete()","title":"Message R6 class — Message","text":"Delete message.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Message R6 class — Message","text":"","code":"Message$delete()"},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"method-content-text-","dir":"Reference","previous_headings":"","what":"Method content_text()","title":"Message R6 class — Message","text":"Get text content message.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Message R6 class — Message","text":"","code":"Message$content_text()"},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"method-thread-","dir":"Reference","previous_headings":"","what":"Method thread()","title":"Message R6 class — Message","text":"Get thread message belongs .","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Message R6 class — Message","text":"","code":"Message$thread()"},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"method-assistant-","dir":"Reference","previous_headings":"","what":"Method assistant()","title":"Message R6 class — Message","text":"Get assistant applicable.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Message R6 class — Message","text":"","code":"Message$assistant()"},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"method-add-delta-","dir":"Reference","previous_headings":"","what":"Method add_delta()","title":"Message R6 class — Message","text":"Add message delta","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Message R6 class — Message","text":"","code":"Message$add_delta(delta)"},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Message R6 class — Message","text":"delta List. Data thread.message.delta event.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Message R6 class — Message","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Message R6 class — Message","text":"","code":"Message$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/Message.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Message R6 class — Message","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":null,"dir":"Reference","previous_headings":"","what":"ModelResponse R6 Class — ModelResponse","title":"ModelResponse R6 Class — ModelResponse","text":"ModelResponse class represents model response object OpenAI API.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ModelResponse R6 Class — ModelResponse","text":"openaiapi::Utils -> ModelResponse","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ModelResponse R6 Class — ModelResponse","text":"id Character. Unique identifier Response. created_at Numeric. Unix timestamp (seconds) Response created. error List NULL. error object returned model fails generate Response. incomplete_details List NULL. Details response incomplete. instructions Character NULL. Inserts system (developer) message first item model's context. max_output_tokens Integer NULL. upper bound number tokens can generated response, including visible output tokens reasoning tokens. metadata List. Set 16 key-value pairs can attached object. model Character. Model ID used generate response, like gpt-4o o1. output List. array content items generated model. output_text Character NULL. SDK-convenience property contains aggregated text output output_text items output array, present. parallel_tool_calls Logical. Whether allow model run tool calls parallel. previous_response_id Character NULL. unique ID previous response model. reasoning List NULL. Configuration options reasoning models. status Character. status response generation. temperature Numeric NULL. sampling temperature use, 0 2. text List. Configuration options text response model. tool_choice Character List. model select tool (tools) use generating response. tools List. array tools model may call generating response. top_p Numeric NULL. alternative sampling temperature, called nucleus sampling. truncation Character NULL. truncation strategy use model response. usage List. Represents token usage details including input tokens, output tokens, breakdown output tokens, total tokens used. user Character. unique identifier representing end-user, can help OpenAI monitor detect abuse.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ModelResponse R6 Class — ModelResponse","text":"ModelResponse$new() ModelResponse$get() ModelResponse$delete() ModelResponse$list_input_items() ModelResponse$do_tool_calls() ModelResponse$respond() ModelResponse$submit_tool_outputs() ModelResponse$wait() ModelResponse$await() ModelResponse$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ModelResponse R6 Class — ModelResponse","text":"Initialize ModelResponse object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponse R6 Class — ModelResponse","text":"","code":"ModelResponse$new(   response_id = NULL,   input = NULL,   ...,   resp = NULL,   .async = TRUE )"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelResponse R6 Class — ModelResponse","text":"response_id Character. Unique identifier Response. input Character List. Text, image, file inputs model, used generate response. ... Additional parameters pass model. resp List. response object returned OpenAI API. .async Logical. Whether retrieve response asynchronously.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"ModelResponse R6 Class — ModelResponse","text":"Get fresh copy model response.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponse R6 Class — ModelResponse","text":"","code":"ModelResponse$get()"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"method-delete-","dir":"Reference","previous_headings":"","what":"Method delete()","title":"ModelResponse R6 Class — ModelResponse","text":"Store model response.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponse R6 Class — ModelResponse","text":"","code":"ModelResponse$delete()"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"method-list-input-items-","dir":"Reference","previous_headings":"","what":"Method list_input_items()","title":"ModelResponse R6 Class — ModelResponse","text":"List input items model response.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponse R6 Class — ModelResponse","text":"","code":"ModelResponse$list_input_items(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelResponse R6 Class — ModelResponse","text":"... Additional parameters pass oai_list_items() function.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"method-do-tool-calls-","dir":"Reference","previous_headings":"","what":"Method do_tool_calls()","title":"ModelResponse R6 Class — ModelResponse","text":"tool calls model response return results.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponse R6 Class — ModelResponse","text":"","code":"ModelResponse$do_tool_calls(env = parent.frame())"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelResponse R6 Class — ModelResponse","text":"env Environment. environment evaluate tool calls.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"method-respond-","dir":"Reference","previous_headings":"","what":"Method respond()","title":"ModelResponse R6 Class — ModelResponse","text":"Create new model response based previous response.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponse R6 Class — ModelResponse","text":"","code":"ModelResponse$respond(input, stream = NULL, ...)"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelResponse R6 Class — ModelResponse","text":"input Character List. Text, image, file inputs model, used generate response. stream Logical. Use change streaming mode response. ... Additional parameters pass model.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"method-submit-tool-outputs-","dir":"Reference","previous_headings":"","what":"Method submit_tool_outputs()","title":"ModelResponse R6 Class — ModelResponse","text":"Submit tool outputs generate new model response.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponse R6 Class — ModelResponse","text":"","code":"ModelResponse$submit_tool_outputs(tool_outputs)"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelResponse R6 Class — ModelResponse","text":"tool_outputs List. tool outputs submit.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"method-wait-","dir":"Reference","previous_headings":"","what":"Method wait()","title":"ModelResponse R6 Class — ModelResponse","text":"Submit tool outputs generate new model response.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponse R6 Class — ModelResponse","text":"","code":"ModelResponse$wait(env = parent.frame())"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelResponse R6 Class — ModelResponse","text":"env Environment. environment evaluate tool calls.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"method-await-","dir":"Reference","previous_headings":"","what":"Method await()","title":"ModelResponse R6 Class — ModelResponse","text":"Wait model response complete.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponse R6 Class — ModelResponse","text":"","code":"ModelResponse$await(env = parent.frame())"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelResponse R6 Class — ModelResponse","text":"env Environment. environment evaluate tool calls.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ModelResponse R6 Class — ModelResponse","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponse R6 Class — ModelResponse","text":"","code":"ModelResponse$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponse.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelResponse R6 Class — ModelResponse","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":null,"dir":"Reference","previous_headings":"","what":"ModelResponseStream R6 Class — ModelResponseStream","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"ModelResponseStream R6 Class ModelResponseStream R6 Class","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"openaiapi::Utils -> openaiapi::ModelResponse -> ModelResponseStream","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"openaiapi::ModelResponse$await() openaiapi::ModelResponse$delete() openaiapi::ModelResponse$do_tool_calls() openaiapi::ModelResponse$get() openaiapi::ModelResponse$list_input_items() openaiapi::ModelResponse$respond() openaiapi::ModelResponse$submit_tool_outputs() openaiapi::ModelResponse$wait()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"ModelResponseStream$new() ModelResponseStream$stream() ModelResponseStream$generator() ModelResponseStream$async_generator() ModelResponseStream$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"Initialize ModelResponseStream object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"","code":"ModelResponseStream$new(stream_reader = NULL, init = NULL)"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"stream_reader StreamReader. stream reader object. init List. initial response object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"method-stream-","dir":"Reference","previous_headings":"","what":"Method stream()","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"Stream model response.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"","code":"ModelResponseStream$stream(   on_event = function(event) {  },   on_output_text = function(output_text) {  },   on_output_text_delta = function(data) {  },   env = parent.frame() )"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"on_event Function. Callback function handle events. function accept single argument, event, list containing event type data. on_output_text Function. Callback function handle event change output text. function accept single argument containing output text string. on_output_text_delta Function. Callback function handle output text delta events. function accept single argument containing delta event data. env Environment. environment evaluate tool calls.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"method-generator-","dir":"Reference","previous_headings":"","what":"Method generator()","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"Get generator function stream.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"","code":"ModelResponseStream$generator(   on_event = function(event) {  },   on_output_text = function(output_text) {  },   on_output_text_delta = function(data) {  },   env = parent.frame() )"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"on_event Function. Callback function handle events. function accept single argument, event, list containing event type data. on_output_text Function. Callback function handle event change output text. function accept single argument containing output text string. on_output_text_delta Function. Callback function handle output text delta events. function accept single argument containing delta event data. env Environment. environment evaluate tool calls.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"coro package generator function.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"method-async-generator-","dir":"Reference","previous_headings":"","what":"Method async_generator()","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"Get async generator function stream.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"","code":"ModelResponseStream$async_generator(   on_event = function(event) {  },   on_output_text = function(output_text) {  },   on_output_text_delta = function(data) {  },   env = parent.frame() )"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"on_event Function. Callback function handle events. function accept single argument, event, list containing event type data. on_output_text Function. Callback function handle event change output text. function accept single argument containing output text string. on_output_text_delta Function. Callback function handle output text delta events. function accept single argument containing delta event data. env Environment. environment evaluate tool calls.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"","code":"ModelResponseStream$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/ModelResponseStream.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelResponseStream R6 Class — ModelResponseStream","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run R6 class — Run","title":"Run R6 class — Run","text":"Run R6 class Run R6 class RunStream R6 class RunStream R6 class","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Run R6 class — Run","text":"openaiapi::Utils -> Run","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Run R6 class — Run","text":"id Run ID. created_at Time run created. thread_id Thread ID. assistant_id Assistant ID. status Run status. required_action Required action. last_error Last error. started_at Time run started. expires_at Time run expires. cancelled_at Time run cancelled. failed_at Time run failed. completed_at Time run completed. incomplete_details Incomplete details. model Model. instructions Instructions. tools Tools. metadata Metadata. usage Usage. temperature Temperature. top_p Top p. max_prompt_tokens Maximum prompt tokens. max_completion_tokens Maximum completion tokens. truncation_strategy Truncation strategy. tool_choice Tool choice. response_format Response format.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Run R6 class — Run","text":"Run$new() Run$list_steps() Run$retrieve() Run$retrieve_status() Run$modify() Run$cancel() Run$submit_tool_outputs() Run$wait() Run$await() Run$do_tool_calls() Run$thread() Run$assistant() Run$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Run R6 class — Run","text":"Initialize Run object. thread_id run_id provided, Run object initialized corresponding run. thread_id assistant_id provided, new run created.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"Run$new(   thread_id = NULL,   run_id = NULL,   assistant_id = NULL,   ...,   resp = NULL,   .async = FALSE )"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run R6 class — Run","text":"thread_id Thread ID Thread object run_id Run ID. assistant_id Assistant ID Assistant object. ... Additional arguments passed API function. resp Response object. .async Logical. TRUE, API call asynchronous.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-list-steps-","dir":"Reference","previous_headings":"","what":"Method list_steps()","title":"Run R6 class — Run","text":"Retrieve run. ... argument passed oai_list_run steps().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"Run$list_steps(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run R6 class — Run","text":"... Additional arguments passed API function.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Run R6 class — Run","text":"list_steps() returns list RunStep objects.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"Run R6 class — Run","text":"Retrieve run.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"Run$retrieve()"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-retrieve-status-","dir":"Reference","previous_headings":"","what":"Method retrieve_status()","title":"Run R6 class — Run","text":"Retrieve --date status run.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"Run$retrieve_status()"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-modify-","dir":"Reference","previous_headings":"","what":"Method modify()","title":"Run R6 class — Run","text":"Modify metadata run.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"Run$modify(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run R6 class — Run","text":"... Additional arguments passed API function.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-cancel-","dir":"Reference","previous_headings":"","what":"Method cancel()","title":"Run R6 class — Run","text":"Cancel run.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"Run$cancel()"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-submit-tool-outputs-","dir":"Reference","previous_headings":"","what":"Method submit_tool_outputs()","title":"Run R6 class — Run","text":"Submit tool outputs.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"Run$submit_tool_outputs(tool_outputs, stream = NULL)"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run R6 class — Run","text":"tool_outputs Tool outputs. stream Logical. TRUE, function return RunStream object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-wait-","dir":"Reference","previous_headings":"","what":"Method wait()","title":"Run R6 class — Run","text":"Wait run complete.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"Run$wait(env = parent.frame())"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run R6 class — Run","text":"env Environment evaluate tool calls.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-await-","dir":"Reference","previous_headings":"","what":"Method await()","title":"Run R6 class — Run","text":"Perform tool calls asynchronously. Returns promise.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"Run$await(env = parent.frame())"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run R6 class — Run","text":"env Environment evaluate tool calls.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-do-tool-calls-","dir":"Reference","previous_headings":"","what":"Method do_tool_calls()","title":"Run R6 class — Run","text":"Perform tool calls. Returns list tool outputs.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"Run$do_tool_calls(env = parent.frame())"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run R6 class — Run","text":"env Environment evaluate tool calls.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-thread-","dir":"Reference","previous_headings":"","what":"Method thread()","title":"Run R6 class — Run","text":"Retrieve thread run.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"Run$thread()"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-assistant-","dir":"Reference","previous_headings":"","what":"Method assistant()","title":"Run R6 class — Run","text":"Retrieve assistant run.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"Run$assistant()"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Run R6 class — Run","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"Run$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run R6 class — Run","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Run R6 class — Run","text":"openaiapi::Utils -> openaiapi::Run -> RunStream","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"public-fields-1","dir":"Reference","previous_headings":"","what":"Public fields","title":"Run R6 class — Run","text":"event_data Data accumulated event stream.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"methods-1","dir":"Reference","previous_headings":"","what":"Methods","title":"Run R6 class — Run","text":"openaiapi::Run$assistant() openaiapi::Run$await() openaiapi::Run$cancel() openaiapi::Run$do_tool_calls() openaiapi::Run$list_steps() openaiapi::Run$modify() openaiapi::Run$retrieve() openaiapi::Run$retrieve_status() openaiapi::Run$submit_tool_outputs() openaiapi::Run$thread() openaiapi::Run$wait()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"public-methods-1","dir":"Reference","previous_headings":"","what":"Public methods","title":"Run R6 class — Run","text":"RunStream$new() RunStream$stream_async() RunStream$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-new--1","dir":"Reference","previous_headings":"","what":"Method new()","title":"Run R6 class — Run","text":"Initialize RunStream object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"RunStream$new(stream_reader)"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run R6 class — Run","text":"stream_reader StreamReader object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-stream-async-","dir":"Reference","previous_headings":"","what":"Method stream_async()","title":"Run R6 class — Run","text":"Stream run asynchronously.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"RunStream$stream_async(   on_message_delta = function(data) {  },   on_message = function(msg) {  },   on_run_step_delta = function(data) {  },   on_run_step = function(step) {  },   on_event = function(event) {  },   env = parent.frame() )"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run R6 class — Run","text":"on_message_delta callback function handle message delta events. on_message callback function handle message events. on_run_step_delta callback function handle run step delta events. on_run_step callback function handle run step events. on_event callback function handle events. env Environment evaluate tool calls.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"method-clone--1","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Run R6 class — Run","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Run R6 class — Run","text":"","code":"RunStream$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/Run.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run R6 class — Run","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":null,"dir":"Reference","previous_headings":"","what":"Thread R6 class — Thread","title":"Thread R6 class — Thread","text":"Thread R6 class Thread R6 class","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Thread R6 class — Thread","text":"id ID thread. created_at time thread created. metadata Additional metadata thread.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Thread R6 class — Thread","text":"Thread$new() Thread$modify() Thread$retrieve() Thread$delete() Thread$create_message() Thread$list_messages() Thread$run() Thread$list_runs() Thread$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Thread R6 class — Thread","text":"Initialize thread. thread_id provided, thread retrieved API. ... argument passed oai_create_thread().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thread R6 class — Thread","text":"","code":"Thread$new(thread_id = NULL, ..., resp = NULL)"},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thread R6 class — Thread","text":"thread_id ID thread. ... Additional arguments passed API functions. resp response OpenAI API.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"method-modify-","dir":"Reference","previous_headings":"","what":"Method modify()","title":"Thread R6 class — Thread","text":"Modify thread. ... argument passed oai_modify_thread().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Thread R6 class — Thread","text":"","code":"Thread$modify(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thread R6 class — Thread","text":"... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"Thread R6 class — Thread","text":"Retrieve thread. ... argument passed oai_retrieve_thread().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Thread R6 class — Thread","text":"","code":"Thread$retrieve(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thread R6 class — Thread","text":"... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"method-delete-","dir":"Reference","previous_headings":"","what":"Method delete()","title":"Thread R6 class — Thread","text":"Delete thread.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Thread R6 class — Thread","text":"","code":"Thread$delete()"},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"method-create-message-","dir":"Reference","previous_headings":"","what":"Method create_message()","title":"Thread R6 class — Thread","text":"Create new message thread. ... argument passed oai_create_message().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Thread R6 class — Thread","text":"","code":"Thread$create_message(content, role = \"user\", ...)"},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thread R6 class — Thread","text":"content content message. role role message. Can \"user\" \"assistant\". ... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Thread R6 class — Thread","text":"create_message() returns thread object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"method-list-messages-","dir":"Reference","previous_headings":"","what":"Method list_messages()","title":"Thread R6 class — Thread","text":"List messages thread. ... argument passed oai_list_messages().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Thread R6 class — Thread","text":"","code":"Thread$list_messages(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thread R6 class — Thread","text":"... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"method-run-","dir":"Reference","previous_headings":"","what":"Method run()","title":"Thread R6 class — Thread","text":"Run thread assistant. ... argument passed oai_create_run().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Thread R6 class — Thread","text":"","code":"Thread$run(assistant_id, ...)"},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thread R6 class — Thread","text":"assistant_id assistant run thread . Can Assistant object assistant ID. ... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"method-list-runs-","dir":"Reference","previous_headings":"","what":"Method list_runs()","title":"Thread R6 class — Thread","text":"List runs thread. ... argument passed oai_list_runs().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Thread R6 class — Thread","text":"","code":"Thread$list_runs(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thread R6 class — Thread","text":"... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Thread R6 class — Thread","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Thread R6 class — Thread","text":"","code":"Thread$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/Thread.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thread R6 class — Thread","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"R6 class managing Vector Store OpenAI API R6 class managing Vector Store OpenAI API","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"VectorStore class provides methods manage vector stores.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"openaiapi::Utils -> VectorStore","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"id Character. unique identifier vector store. created_at POSIXct. timestamp vector store created. name Character. name vector store. usage_bytes Numeric. total number bytes used vector store. file_counts Integer. number files vector store. status Character. current status vector store. expires_after List. duration vector store expire. expires_at POSIXct. exact timestamp vector store expire. last_active_at POSIXct. last time vector store active. metadata List. Additional metadata associated vector store.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"VectorStore$new() VectorStore$retrieve() VectorStore$modify() VectorStore$delete() VectorStore$create_file() VectorStore$upload_file() VectorStore$list_files() VectorStore$retrieve_file() VectorStore$delete_file() VectorStore$search() VectorStore$create_file_batch() VectorStore$retrieve_file_batch() VectorStore$cancel_file_batch() VectorStore$list_files_in_a_batch() VectorStore$print() VectorStore$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"Initialize VectorStore object","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$new(vector_store_id = NULL, ..., resp = NULL)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"vector_store_id Character. Optional. ID vector store initialize. ... Additional arguments passed API functions. resp list. response object OpenAI API containing details vector store.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"new instance VectorStore object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"Retrieve vector store","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$retrieve()"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"updated VectorStore object retrieving details OpenAI API.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-modify-","dir":"Reference","previous_headings":"","what":"Method modify()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"Modify vector store. ... argument passed oai_modify_vector_store().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$modify(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-delete-","dir":"Reference","previous_headings":"","what":"Method delete()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"Delete vector store.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$delete()"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-create-file-","dir":"Reference","previous_headings":"","what":"Method create_file()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"Create file vector store. ... argument passed oai_create_vector_store_file().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$create_file(file_id, ...)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"file_id Character. ID file added vector store. ... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-upload-file-","dir":"Reference","previous_headings":"","what":"Method upload_file()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"Upload file vector store. ... argument passed oai_upload_file().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$upload_file(path, ...)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"path Character. path file upload. ... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-list-files-","dir":"Reference","previous_headings":"","what":"Method list_files()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"List files vector store. ... argument passed oai_list_vector_store_files().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$list_files(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-retrieve-file-","dir":"Reference","previous_headings":"","what":"Method retrieve_file()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"Retrieve file vector store.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$retrieve_file(file_id)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"file_id Character. ID file added vector store.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-delete-file-","dir":"Reference","previous_headings":"","what":"Method delete_file()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"Delete file vector store.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$delete_file(file_id)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"file_id Character. ID file added vector store.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-search-","dir":"Reference","previous_headings":"","what":"Method search()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"Search vector store.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$search(query, ...)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"query Character. query string search. ... Additional arguments passed API functions. filters List. Optional. filter apply based file attributes.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-create-file-batch-","dir":"Reference","previous_headings":"","what":"Method create_file_batch()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"Create file batch. ... argument passed oai_create_vector_store_file_batch().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$create_file_batch(file_ids, ...)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"file_ids Character. Optional. vector file IDs include vector store. ... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"VectorStoreFilesBatch R6 object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-retrieve-file-batch-","dir":"Reference","previous_headings":"","what":"Method retrieve_file_batch()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"Retrieve file batch.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$retrieve_file_batch(batch_id)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"batch_id Character. ID batch retrieve.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-cancel-file-batch-","dir":"Reference","previous_headings":"","what":"Method cancel_file_batch()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"Cancel file batch","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$cancel_file_batch(batch_id)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"batch_id Character. ID batch retrieve.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-list-files-in-a-batch-","dir":"Reference","previous_headings":"","what":"Method list_files_in_a_batch()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"List files batch","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$list_files_in_a_batch(batch_id = batch_id, ...)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"batch_id Character. ID batch retrieve. ... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"Print VectorStore object","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$print(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"... Unused.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"","code":"VectorStore$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStore.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for managing a Vector Store in the OpenAI API — VectorStore","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":null,"dir":"Reference","previous_headings":"","what":"VectorStoreFile R6 class — VectorStoreFile","title":"VectorStoreFile R6 class — VectorStoreFile","text":"VectorStoreFile R6 class VectorStoreFile R6 class","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"VectorStoreFile R6 class — VectorStoreFile","text":"openaiapi::Utils -> VectorStoreFile","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"VectorStoreFile R6 class — VectorStoreFile","text":"id Character. ID vector store file. created_at POSIXct. time vector store file created. usage_bytes Integer. number bytes used vector store file. vector_store_id Character. ID vector store file belongs . status Character. status vector store file. One \"in_progress\", \"completed\", \"failed\", \"cancelled\". last_error Character. last error occurred processing file. chunking_strategy List. strategy used chunk data.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"VectorStoreFile R6 class — VectorStoreFile","text":"VectorStoreFile$new() VectorStoreFile$retrieve() VectorStoreFile$update() VectorStoreFile$delete() VectorStoreFile$print() VectorStoreFile$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"VectorStoreFile R6 class — VectorStoreFile","text":"Initialize new VectorStoreFile object. Either provide vector_store_file_id vector_store_id together file_id path file.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VectorStoreFile R6 class — VectorStoreFile","text":"","code":"VectorStoreFile$new(   vector_store_file_id = NULL,   vector_store_id = NULL,   file_id = NULL,   path = NULL,   resp = NULL )"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VectorStoreFile R6 class — VectorStoreFile","text":"vector_store_file_id Character. ID vector store file. vector_store_id Character. ID vector store file belongs . file_id Character. ID file vector store file associated . path Character. path file vector store file associated . resp List. response object OpenAI API.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"VectorStoreFile R6 class — VectorStoreFile","text":"Retrieve vector store file OpenAI API.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"VectorStoreFile R6 class — VectorStoreFile","text":"","code":"VectorStoreFile$retrieve()"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"VectorStoreFile R6 class — VectorStoreFile","text":"Update vector store file OpenAI API.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"VectorStoreFile R6 class — VectorStoreFile","text":"","code":"VectorStoreFile$update(attributes)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"VectorStoreFile R6 class — VectorStoreFile","text":"attributes Named list. list attributes update, maximum 16 key-value pairs. Keys strings maximum length 64 characters. Values strings maximum length 512 characters, booleans, numbers.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"method-delete-","dir":"Reference","previous_headings":"","what":"Method delete()","title":"VectorStoreFile R6 class — VectorStoreFile","text":"Delete vector store file OpenAI API.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"VectorStoreFile R6 class — VectorStoreFile","text":"","code":"VectorStoreFile$delete()"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"VectorStoreFile R6 class — VectorStoreFile","text":"Print vector store file.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"VectorStoreFile R6 class — VectorStoreFile","text":"","code":"VectorStoreFile$print(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"VectorStoreFile R6 class — VectorStoreFile","text":"... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"VectorStoreFile R6 class — VectorStoreFile","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"VectorStoreFile R6 class — VectorStoreFile","text":"","code":"VectorStoreFile$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFile.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"VectorStoreFile R6 class — VectorStoreFile","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":null,"dir":"Reference","previous_headings":"","what":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"VectorStoreFilesBatch R6 class VectorStoreFilesBatch R6 class","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"openaiapi::Utils -> VectorStoreFilesBatch","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"id Character. ID file batch. created_at POSIXct. date time file batch created. vector_store_id Character. ID vector store file batch created. status Character. status file batch. file_counts List. number files batch.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"VectorStoreFilesBatch$new() VectorStoreFilesBatch$retrieve() VectorStoreFilesBatch$cancel() VectorStoreFilesBatch$delete() VectorStoreFilesBatch$list_files() VectorStoreFilesBatch$print() VectorStoreFilesBatch$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"Initialize VectorStoreFilesBatch object. ... argument passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"","code":"VectorStoreFilesBatch$new(   vector_store_id = NULL,   batch_id = NULL,   file_ids = NULL,   paths = NULL,   ...,   resp = NULL )"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"vector_store_id Character. ID vector store file batch created. batch_id Character. ID batch retrieve. file_ids Character. vector file IDs include batch. paths Character. vector file paths include batch. ... Additional arguments passed API functions. resp List. response API.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"Retrieve file batch.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"","code":"VectorStoreFilesBatch$retrieve()"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"method-cancel-","dir":"Reference","previous_headings":"","what":"Method cancel()","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"Cancel file batch.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"","code":"VectorStoreFilesBatch$cancel()"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"method-delete-","dir":"Reference","previous_headings":"","what":"Method delete()","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"Delete file batch.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"","code":"VectorStoreFilesBatch$delete()"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"method-list-files-","dir":"Reference","previous_headings":"","what":"Method list_files()","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"List files file batch. ... argument passed oai_list_vector_store_files().","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"","code":"VectorStoreFilesBatch$list_files(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"Print file batch.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"","code":"VectorStoreFilesBatch$print(...)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"... Additional arguments passed API functions.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"","code":"VectorStoreFilesBatch$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/VectorStoreFilesBatch.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"VectorStoreFilesBatch R6 class — VectorStoreFilesBatch","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/assistant_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Assistant API — assistant_api","title":"Assistant API — assistant_api","text":"Build assistants can call models use tools perform tasks. oai_create_assistant(): Create assistant model instructions. oai_modify_assistant(): Modify assistant's properties. oai_list_assistants(): List assistants. oai_retrieve_assistant(): Retrieve assistant. oai_delete_assistant(): Delete assistant.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/assistant_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assistant API — assistant_api","text":"","code":"oai_create_assistant(   model,   name = NULL,   description = NULL,   instructions = NULL,   tools = NULL,   tool_resources = NULL,   metadata = NULL,   temperature = NULL,   top_p = NULL,   response_format = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_modify_assistant(   assistant_id,   model = NULL,   name = NULL,   description = NULL,   instructions = NULL,   tools = NULL,   tool_resources = NULL,   metadata = NULL,   temperature = NULL,   top_p = NULL,   response_format = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_list_assistants(   limit = NULL,   order = NULL,   after = NULL,   before = NULL,   .classify_response = TRUE )  oai_retrieve_assistant(assistant_id, .classify_response = TRUE, .async = FALSE)  oai_delete_assistant(assistant_id, .async = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/assistant_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assistant API — assistant_api","text":"model Character. ID model use. can use oai_list_models() see available models. name Character NULL. Optional. name assistant. maximum length 256 characters. description Character NULL. Optional. description assistant. maximum length 512 characters. instructions Character NULL. Optional. system instructions assistant uses. maximum length 256,000 characters. tools List. Optional. Defaults NULL. list tools enabled assistant. can maximum 128 tools per assistant. Tools can types code_interpreter, file_search, function. tool_resources List. Optional. set resources used assistant's tools. resources specific type tool. example, code_interpreter tool requires list file IDs, file_search tool requires list vector store IDs. metadata List. Optional. Set 16 key-value pairs can attached object. can useful storing additional information object structured format. Keys can maximum 64 characters long values can maximum 512 characters long. temperature Numeric. Optional. Defaults 1. sampling temperature use, 0 2. Higher values like 0.8 make output random, lower values like 0.2 make focused deterministic. top_p Numeric. Optional. Defaults 1. alternative sampling temperature, called nucleus sampling, model considers results tokens top_p probability mass. 0.1 means tokens comprising top 10% probability mass considered. generally recommend altering temperature . response_format Character List. Optional. Specifies format model must output. Compatible GPT-4o, GPT-4 Turbo, GPT-3.5 Turbo models since gpt-3.5-turbo-1106. Setting list(type = \"json_object\") enables JSON mode, guarantees message model generates valid JSON. Important: using JSON mode, must also instruct model produce JSON via system user message. Without , model may generate unending stream whitespace generation reaches token limit, resulting long-running seemingly \"stuck\" request. Also note message content may partially cut finish_reason=\"length\", indicates generation exceeded max_tokens conversation exceeded max context length. .classify_response Logical. TRUE (default), response classified R6 object. FALSE, response returned list. .async Logical. TRUE, request performed asynchronously. assistant_id Character. ID assistant retrieve. limit Integer. Optional. limit number objects returned. Limit can range 1 100, default 20. order Character. Optional. Sort order created_at timestamp objects. \"asc\" ascending order \"desc\" descending order. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch next page list. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch previous page list.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/assistant_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assistant API — assistant_api","text":"Functions oai_create_assistant(), oai_modify_assistant(), oai_retrieve_assistant() return Assistant R6 object. Function oai_list_assistants() returns list Assistant R6 objects. Function oai_delete_assistant() returns deletion status.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio.html","id":null,"dir":"Reference","previous_headings":"","what":"Audio API — audio","title":"Audio API — audio","text":"Turn audio text text audio. oai_create_speec(): Generates audio input text. oai_create_transcription(): Transcribes audio input language. oai_create_translation(): Translates audio English.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Audio API — audio","text":"","code":"oai_create_speech(   input,   path,   model = c(\"tts-1\", \"tts-1-hd\"),   voice = c(\"alloy\", \"ash\", \"coral\", \"echo\", \"fable\", \"onyx\", \"nova\", \"sage\", \"shimmer\"),   response_format = c(\"mp3\", \"opus\", \"aac\", \"flac\", \"wav\", \"pcm\"),   speed = NULL,   .async = FALSE )  oai_create_transcription(   file,   model = \"whisper-1\",   language = NULL,   prompt = NULL,   response_format = c(\"json\", \"text\", \"srt\", \"verbose_json\", \"vtt\"),   temperature = NULL,   timestamp_granularities = NULL,   name = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_create_translation(   file,   model = \"whisper-1\",   prompt = NULL,   response_format = c(\"json\", \"text\", \"srt\", \"verbose_json\", \"vtt\"),   temperature = NULL,   name = NULL,   .classify_response = TRUE,   .async = FALSE )"},{"path":"https://robonomist.github.io/openaiapi/reference/audio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Audio API — audio","text":"input Character. text generate audio . maximum length 4096 characters. path Character. path save audio file. model Character. ID model use. whisper-1 (powered open source Whisper V2 model) currently available. voice Character. voice use generating audio. Supported voices alloy, ash, coral, echo, fable, onyx, nova, sage shimmer. Previews voices available Text speech guide. response_format Character. format output, one options: json, text, srt, verbose_json, vtt. speed Numeric. speed generated audio. Select value 0.25 4.0. 1.0 default. .async Logical. TRUE, request performed asynchronously. file Character. audio file object (file name) translate, one formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, webm. language Character. language input audio. Supplying input language ISO-639-1 format improve accuracy latency. prompt Character. optional text guide model's style continue previous audio segment. prompt English. temperature Numeric. sampling temperature, 0 1. Higher values like 0.8 make output random, lower values like 0.2 make focused deterministic. set 0, model use log probability automatically increase temperature certain thresholds hit. timestamp_granularities List. timestamp granularities populate transcription. response_format must set verbose_json use timestamp granularities. Either options supported: word, segment. Note: additional latency segment timestamps, generating word timestamps incurs additional latency. name Character. file name use upload. .classify_response Logical. TRUE (default), response classified R6 object. FALSE, response returned list.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Audio API — audio","text":"Returns audio file content. Returns transcription object verbose transcription object. Returns translated text.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":null,"dir":"Reference","previous_headings":"","what":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"Transcription object Represents transcription response returned model, based provided input. Transcription object Represents transcription response returned model, based provided input. Verbose transcription object Represents verbose json transcription response returned model, based provided input. Verbose transcription object Represents verbose json transcription response returned model, based provided input.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"text Character. transcribed text.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"Transcription$new() Transcription$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"Initialize Transcription object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"","code":"Transcription$new(..., resp = NULL)"},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"... unused. resp List. response object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"","code":"Transcription$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"public-fields-1","dir":"Reference","previous_headings":"","what":"Public fields","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"language Character. language input audio. duration Character. duration input audio. text Character. transcribed text. words List. Extracted words corresponding timestamps. segments List. Segments transcribed text corresponding details.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"public-methods-1","dir":"Reference","previous_headings":"","what":"Public methods","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"VerboseTranscription$new() VerboseTranscription$clone()","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"method-new--1","dir":"Reference","previous_headings":"","what":"Method new()","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"Initialize VerboseTranscription object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"","code":"VerboseTranscription$new(..., resp = NULL)"},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"... unused. resp List. response object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"method-clone--1","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"objects class cloneable method.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"","code":"VerboseTranscription$clone(deep = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/audio_transcription.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transcription object Represents a transcription response returned by model, based on the provided input. — Transcription","text":"deep Whether make deep clone.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/chat_completion_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Chat completion API — chat_completion_api","title":"Chat completion API — chat_completion_api","text":"oai_create_chat_completion(): Create chat completion.` oai_get_chat_completion(): Get stored chat completion. oai_get_chat_messages(): Get messages stored chat completion. oai_list_chat_completions(): List stored chat completions. oai_update_chat_completion(): Update stored chat completion. oai_delete_chat_completion(): Delete stored chat completion. chat completions created store parameter set true can deleted.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/chat_completion_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chat completion API — chat_completion_api","text":"","code":"oai_create_chat_completion(   messages,   model = \"gpt-4o\",   frequency_penalty = NULL,   logit_bias = NULL,   logprobs = NULL,   top_logprobs = NULL,   max_tokens = NULL,   n = NULL,   presence_penalty = NULL,   response_format = NULL,   seed = NULL,   service_tier = NULL,   stop = NULL,   stream = NULL,   stream_options = NULL,   temperature = NULL,   top_p = NULL,   tools = NULL,   tools_choice = NULL,   parallel_tool_calls = NULL,   user = NULL,   web_search_options = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_get_chat_completion(   completion_id,   .classify_response = TRUE,   .async = FALSE )  oai_get_chat_messages(   completion_id,   after = NULL,   limit = NULL,   order = NULL,   .async = FALSE )  oai_list_chat_completions(   model = NULL,   metadata = NULL,   after = NULL,   limit = NULL,   order = NULL )  oai_update_chat_completion(   completion_id,   metadata,   .classify_response = TRUE,   .async = FALSE )  oai_delete_chat_completion(completion_id, .async = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/chat_completion_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chat completion API — chat_completion_api","text":"messages list messages comprising conversation far. can also pass oai_message object character vector. model model used generate chat completions. frequency_penalty Numeric. Number -2.0 2.0. Positive values penalize new tokens based existing frequency text far, decreasing model's likelihood repeat line verbatim. logit_bias List. Modify likelihood specified tokens appearing completion. logprobs Logical. Whether return log probabilities output tokens . true, returns log probabilities output token returned content message. top_logprobs Integer. integer 0 20 specifying number likely tokens return token position, associated log probability. logprobs must set true parameter used. max_tokens Integer. maximum number tokens can generated chat completion. n Integer. many chat completion choices generate input message. Note charged based number generated tokens across choices. Keep n 1 minimize costs. presence_penalty Numeric. Number -2.0 2.0. Positive values penalize new tokens based whether appear text far, increasing model's likelihood talk new topics. response_format List. object specifying format model must output. Compatible GPT-4o, GPT-4o mini, GPT-4 Turbo GPT-3.5 Turbo models newer gpt-3.5-turbo-1106. seed Integer. specified, system make best effort sample deterministically, repeated requests seed parameters return result. Determinism guaranteed, refer system_fingerprint response parameter monitor changes backend. service_tier Character. Specifies latency tier use processing request. parameter relevant customers subscribed scale tier service. stop Character. 4 sequences API stop generating tokens. stream Logical. set, partial message deltas sent, like ChatGPT. Tokens sent data-server-sent events become available, stream terminated data. stream_options List. Options streaming response. set set stream = TRUE. temperature Numeric. sampling temperature use, 0 2. Higher values like 0.8 make output random, lower values like 0.2 make focused deterministic. top_p Numeric. alternative sampling temperature, called nucleus sampling, model considers results tokens top_p probability mass. 0.1 means tokens comprising top 10% probability mass considered. tools List. list tools model may call. Currently, functions supported tool. Use provide list functions model may generate JSON inputs . max 128 functions supported. tools_choice Character. Controls () tool called model. \"none\" means model call tool instead generates message. \"auto\" means model can pick generating message calling one tools. \"required\" means model must call one tools. Specifying particular tool via list(type = \"function\", function = list(name = \"my_function\")) forces model call tool. \"none\" default tools present. \"auto\" default tools present. parallel_tool_calls Logical. Whether enable parallel function calling tool use. user Character. unique identifier representing end-user, can help OpenAI monitor detect abuse. web_search_options List. tool searches web relevant results use response. .classify_response Logical. TRUE (default), response classified R6 object. FALSE, response returned list. .async Logical. TRUE, request performed asynchronously. completion_id ID chat completion delete. Identifier last chat completion previous pagination request. limit Number chat completions retrieve. order Sort order chat completions timestamp. Use asc ascending order desc descending order. Defaults asc. metadata List. Optional. named list 16 key-value pairs can attached object. can useful storing additional information object structured format, querying objects via API dashboard.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/chat_completion_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chat completion API — chat_completion_api","text":"ChatCompletion R6 object. oai_get_chat_messages() returns list messages chat completion. oai_list_chat_completions() returns list ChatCompletion objects. oai_delete_chat_completion() returns deletion confirmation object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/chat_completion_api.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chat completion API — chat_completion_api","text":"chat completions created store parameter set true returned.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/common_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Common parameters — common_parameters","title":"Common parameters — common_parameters","text":"Common parameters","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/common_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common parameters — common_parameters","text":"limit Integer. Optional. limit number objects returned. Limit can range 1 100, default 20. order Character. Optional. Sort order created_at timestamp objects. \"asc\" ascending order \"desc\" descending order. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch next page list. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch previous page list. metadata List. Optional. named list 16 key-value pairs can attached object. can useful storing additional information object structured format, querying objects via API dashboard. .classify_response Logical. TRUE (default), response classified R6 object. FALSE, response returned list. stream yet implemented. .async Logical. TRUE, request performed asynchronously.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/compact.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact a list — compact","title":"Compact a list — compact","text":"Compact list","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/compact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact a list — compact","text":"","code":"compact(x)"},{"path":"https://robonomist.github.io/openaiapi/reference/do_call_sandbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and call a tool function — do_call_sandbox","title":"Validate and call a tool function — do_call_sandbox","text":"Validate call tool function","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/do_call_sandbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and call a tool function — do_call_sandbox","text":"","code":"do_call_sandbox(tool_call_function, env)"},{"path":"https://robonomist.github.io/openaiapi/reference/embeddings_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Embeddings API — embeddings_api","title":"Embeddings API — embeddings_api","text":"Get vector representation given input can easily consumed machine learning models algorithms. oai_create_embeddings(): Creates embedding vector representing input text.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/embeddings_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Embeddings API — embeddings_api","text":"","code":"oai_create_embeddings(   input,   model,   encoding_format = c(\"float\", \"base64\"),   dimensions = NULL,   user = NULL,   .classify_response = TRUE,   .async = FALSE )"},{"path":"https://robonomist.github.io/openaiapi/reference/embeddings_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Embeddings API — embeddings_api","text":"input Character. Input text embed, encoded string array tokens. embed multiple inputs single request, pass array strings array token arrays. input must exceed max input tokens model (8192 tokens text-embedding-ada-002), empty string, array must 2048 dimensions less. Example Python code counting tokens. model Character. ID model use. can use oai_list_models() function see available models. encoding_format Character. Defaults \"float\". format return embeddings . Can either \"float\" \"base64\". dimensions Integer. number dimensions resulting output embeddings . supported text-embedding-3 later models. user Character. unique identifier representing end-user, can help OpenAI monitor detect abuse. .classify_response Logical. TRUE (default), response classified R6 object. FALSE, response returned list. .async Logical. TRUE, request performed asynchronously.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/embeddings_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Embeddings API — embeddings_api","text":"list Embedding R6 objects.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/files_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Files API — files_api","title":"Files API — files_api","text":"Files used upload documents can used features like Assistants, Fine-tuning, Batch API. oai_upload_file() Upload file OpenAI. oai_list_files() List files uploaded OpenAI. oai_retrieve_file() Retrieve specific file OpenAI. oai_retrieve_file_content() Retrieve content specific file OpenAI.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/files_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Files API — files_api","text":"","code":"oai_upload_file(   path,   purpose = c(\"assistants\", \"vision\", \"batch\", \"fine-tune\"),   name = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_list_files(   purpose = NULL,   limit = NULL,   order = NULL,   after = NULL,   .classify_response = TRUE )  oai_retrieve_file(file_id, .classify_response = TRUE, .async = FALSE)  oai_delete_file(file_id, .async = FALSE)  oai_retrieve_file_content(file_id, path, .async = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/files_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Files API — files_api","text":"path Character. path file upload. purpose Character. Optional. list files specified purpose. name Character. Optional. name file. provided, file name used. .classify_response Logical. Whether classify response R6 object. .async Logical. TRUE, request performed asynchronously. limit Integer. Optional. maximum number files list. Defaults 10,000. order Character. Optional. order list files. Can \"asc\" \"desc\". Character. Optional. ID file start list . file_id Character. ID file delete.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/files_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Files API — files_api","text":"File R6 object File R6 object File R6 object Deletion status response API.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/fine_tuning_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Fine-tuning API — fine_tuning_api","title":"Fine-tuning API — fine_tuning_api","text":"Manage fine-tuning jobs tailor model specific training data. oai_create_fine_tuning_job() creates fine-tuning job. oai_list_fine_tuning_jobs() lists fine-tuning jobs. oai_list_fine_tuning_events() lists fine-tuning events. oai_list_fine_tuning_checkpoints() lists fine-tuning checkpoints. oai_get_fine_tuning_job() retrieves fine-tuning job. oa_cancel_fine_tuning() cancels fine-tuning job.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/fine_tuning_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fine-tuning API — fine_tuning_api","text":"","code":"oai_create_fine_tuning_job(   model,   training_file,   hyperparameters = NULL,   suffix = NULL,   validation_file = NULL,   integrations = NULL,   seed = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_list_fine_tuning_jobs(   after = NULL,   limit = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_list_fine_tuning_events(   fine_tuning_job_id,   after = NULL,   limit = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_list_fine_tuning_checkpoints(   fine_tuning_job_id,   after = NULL,   limit = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_get_fine_tuning_job(   fine_tuning_job_id,   .classify_response = TRUE,   .async = FALSE )  oai_cancel_fine_tuning(   fine_tuning_job_id,   .classify_response = TRUE,   .async = FALSE )"},{"path":"https://robonomist.github.io/openaiapi/reference/fine_tuning_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fine-tuning API — fine_tuning_api","text":"model name model fine-tune. can select one supported models. training_file ID uploaded file contains training data. hyperparameters hyperparameters used fine-tuning job. suffix string 64 characters added fine-tuned model name. validation_file ID uploaded file contains validation data. integrations list integrations enable fine-tuning job. seed seed controls reproducibility job. Passing seed job parameters produce results, may differ rare cases. seed specified, one generated . .classify_response Logical. TRUE (default), response classified R6 object. FALSE, response returned list. .async Logical. TRUE, request performed asynchronously. Identifier last checkpoint ID previous pagination request. limit Number checkpoints retrieve. fine_tuning_job_id ID fine-tuning job.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/fine_tuning_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fine-tuning API — fine_tuning_api","text":"FineTuningJob R6 object. oai_list_fine_tuning_jobs() returns list FineTuningJob R6 objects. oai_list_fine_tuning_events() returns list FineTuningEvent R6 objects. oai_list_fine_tuning_checkpoints() returns list FineTuningCheckpoint R6 objects.","code":""},{"path":[]},{"path":"https://robonomist.github.io/openaiapi/reference/make_sandbox_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sandbox environment for function tools — make_sandbox_env","title":"Create a sandbox environment for function tools — make_sandbox_env","text":"convenience, function tools calling methods, default, evaluated parent frame. poses security risk, function tools call, receved API, can access environment caller (thus potentially function variable R). function creates sandbox environment function tools, copy parent frame, without unnecessary variables functions parent frame. sandbox environment can used evaluate function tools safe manner.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/make_sandbox_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sandbox environment for function tools — make_sandbox_env","text":"","code":"make_sandbox_env(tools, env = parent.frame())"},{"path":"https://robonomist.github.io/openaiapi/reference/make_sandbox_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sandbox environment for function tools — make_sandbox_env","text":"tools list function tools. env environment use find function tools. Defaults parent frame.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/message_api.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for the attachment argument in oai_create_message() and Message objects. — oai_create_message","title":"A helper function for the attachment argument in oai_create_message() and Message objects. — oai_create_message","text":"oai_create_message() Create message thread. Manage messages within threads oai_list_messages() List messages thread. oai_retrieve_message() Retrieve message. oai_modify_message() Modify message. oai_delete_message() Delete message.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/message_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for the attachment argument in oai_create_message() and Message objects. — oai_create_message","text":"","code":"oai_create_message(   thread_id,   content,   role = c(\"user\", \"assistant\"),   attachments = NULL,   metadata = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_attachment(file_id, tools = c(\"code_interpreter\", \"file_search\"))  oai_list_messages(   thread_id,   limit = NULL,   order = NULL,   after = NULL,   before = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_retrieve_message(   thread_id,   message_id,   .classify_response = TRUE,   .async = FALSE )  oai_modify_message(   thread_id,   message_id,   metadata = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_delete_message(thread_id, message_id, .async = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/message_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for the attachment argument in oai_create_message() and Message objects. — oai_create_message","text":"thread_id Character. ID thread. content Character. content message. role Character. role sender. attachments List NULL. Optional. Attachments include message. metadata List NULL. Optional. Metadata include message. .classify_response Logical. TRUE (default), response classified R6 object. FALSE, response returned list. .async Logical. TRUE, request performed asynchronously. file_id Character. ID file. tools Character. tools use attachment. limit Integer. Optional. limit number objects returned. Limit can range 1 100, default 20. order Character. Optional. Sort order created_at timestamp objects. \"asc\" ascending order \"desc\" descending order. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch next page list. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch previous page list. message_id Character. ID message.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/message_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for the attachment argument in oai_create_message() and Message objects. — oai_create_message","text":"Message R6 object. oai_list_messages() returns list messages thread. oai_delete_message() returns deletion status.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/model_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Responses API — oai_create_model_response","title":"Responses API — oai_create_model_response","text":"oai_create_model_response() - Create model response. oai_model_response() - Create ModelResponse ModelResponseStream object without making API call. oai_get_model_response() - Retrieve model response. oai_delete_model_response() - Delete model response. oai_list_input_items() - List input items model response.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/model_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Responses API — oai_create_model_response","text":"","code":"oai_create_model_response(   input,   model = \"gpt-4o\",   include = NULL,   instructions = NULL,   max_output_tokens = NULL,   parallel_tool_calls = NULL,   previous_response_id = NULL,   reasoning = NULL,   store = NULL,   stream = NULL,   temperature = NULL,   text = NULL,   tool_choice = NULL,   tools = NULL,   top_p = NULL,   truncation = NULL,   user = NULL,   .classify_response = TRUE,   .async = FALSE,   .perform_query = TRUE )  oai_model_response(   model = \"gpt-4o\",   instructions = NULL,   max_output_tokens = NULL,   parallel_tool_calls = NULL,   previous_response_id = NULL,   reasoning = NULL,   store = NULL,   stream = NULL,   temperature = NULL,   text = NULL,   tool_choice = NULL,   tools = NULL,   top_p = NULL,   truncation = NULL,   user = NULL,   .async = FALSE )  oai_get_model_response(   response_id,   include = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_delete_model_response(   response_id,   .classify_response = TRUE,   .async = FALSE )  oai_list_input_items(   response_id,   after = NULL,   before = NULL,   include = NULL,   limit = NULL,   order = NULL,   .classify_response = TRUE,   .async = FALSE )"},{"path":"https://robonomist.github.io/openaiapi/reference/model_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Responses API — oai_create_model_response","text":"input Character List. Text, image, file inputs model, used generate response. model Character. Model ID used generate response, like \"gpt-4o\" \"o1\". include List. Specify additional output data include model response. instructions Character. Inserts system (developer) message first item model's context. max_output_tokens Integer. upper bound number tokens can generated response, including visible output tokens reasoning tokens. parallel_tool_calls Logical. Whether allow model run tool calls parallel. previous_response_id Character. unique ID previous response model. Use create multi-turn conversations. reasoning List. Configuration options reasoning models. store Logical. Whether store generated model response later retrieval via API. stream Logical. set TRUE, function return ModelResponseStream object. temperature Numeric. sampling temperature use, 0 2. Higher values like 0.8 make output random, lower values like 0.2 make focused deterministic. text List. Configuration options text response model. Can plain text structured JSON data. tool_choice Character List. model select tool (tools) use generating response. tools List. array tools model may call generating response. top_p Numeric. alternative sampling temperature, called nucleus sampling, model considers results tokens top_p probability mass. truncation Character. truncation strategy use model response. user Character. unique identifier representing end-user, can help OpenAI monitor detect abuse. .classify_response Logical. TRUE (default), response classified R6 object. FALSE, response returned list. .async Logical. TRUE, request performed asynchronously. .perform_query Logical. Set FALSE skip API call return ModelResponse ModelResponseStream object, can used call API later. response_id Character. ID response retrieve input items . Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch next page list. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch previous page list. limit Integer. Optional. limit number objects returned. Limit can range 1 100, default 20. order Character. Optional. Sort order created_at timestamp objects. \"asc\" ascending order \"desc\" descending order.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/model_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Responses API — oai_create_model_response","text":"oai_create_model_response() - ModelResponse object. oai_model_response() - ModelResponse ModelResponseStream object. oai_get_model_response() - ModelResponse object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/models_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Models API — models_api","title":"Models API — models_api","text":"List describe various models available API. oai_list_models(): Retrieve data frame models. oai_retrieve_model(): Retrieve model. oai_delete_model(): Delete model.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/models_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Models API — models_api","text":"","code":"oai_list_models()  oai_retrieve_model(model_id)  oai_delete_model(model_id)"},{"path":"https://robonomist.github.io/openaiapi/reference/models_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Models API — models_api","text":"model_id Character. ID model retrieve/delete.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/models_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Models API — models_api","text":"models","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/oai_function_tool.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a function tool — oai_function_tool","title":"Define a function tool — oai_function_tool","text":"Define function tool Create function tool parameter oai_function_tool","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/oai_function_tool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a function tool — oai_function_tool","text":"","code":"oai_function_tool(   name,   description = NULL,   ...,   parameters = NULL,   strict = TRUE )  oai_function_tool_parameter(   name,   type,   description,   required = TRUE,   enum = NULL,   ... )"},{"path":"https://robonomist.github.io/openaiapi/reference/oai_function_tool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a function tool — oai_function_tool","text":"name name parameter. description description parameter. ... Additional properties added parameter. parameters Parameters can given alternatively list oai_function_tool_parameter objects. strict Whether enable strict schema adherence generating function call. set true, model follow exact schema defined parameters field. type type parameter. Possible values \"string\", \"number\", \"boolean\", \"array\", \"object\", \"null\". required Whether parameter required optional. enum list possible values parameter.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/oai_set_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Set OpenAI API key — oai_set_api_key","title":"Set OpenAI API key — oai_set_api_key","text":"use OpenAI API, need API key. can get one signing OpenAI.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/oai_set_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set OpenAI API key — oai_set_api_key","text":"","code":"oai_set_api_key(api_key)"},{"path":"https://robonomist.github.io/openaiapi/reference/oai_set_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set OpenAI API key — oai_set_api_key","text":"api_key character string OpenAI API key.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/oai_set_api_key.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set OpenAI API key — oai_set_api_key","text":"Alternatively, can set OPENAI_API_KEY environment variable, read package load time.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/run_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Run API — run_api","title":"Run API — run_api","text":"Runs represents executions run thread. oa_create_run(): Create new run. oai_create_thread_and_run(): Create new thread run. oai_list_runs(): List runs. oai_list_run_steps(): List run steps. oai_retrieve_run(): Retrieve run. oai_modify_run(): Modify run. oai_cancel_run(): Cancel run. oai_submit_tool_outputs(): Submit tool outputs. oai_tool_output(): helper function format tool output. oai_retrieve_run_step(): Retrieve run step.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/run_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run API — run_api","text":"","code":"oai_create_run(   thread_id,   assistant_id,   model = NULL,   instructions = NULL,   additional_instructions = NULL,   additional_messages = NULL,   tools = NULL,   metadata = NULL,   temperature = NULL,   top_p = NULL,   stream = NULL,   max_prompt_tokens = NULL,   max_completion_tokens = NULL,   truncation_strategy = NULL,   tool_choice = NULL,   response_format = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_create_thread_and_run(   assistant_id,   thread = NULL,   model = NULL,   instructions = NULL,   tools = NULL,   tool_resources = NULL,   metadata = NULL,   temperature = NULL,   top_p = NULL,   stream = NULL,   max_prompt_tokens = NULL,   max_completion_tokens = NULL,   truncation_strategy = NULL,   tool_choice = NULL,   response_format = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_list_runs(   thread_id,   limit = NULL,   order = NULL,   after = NULL,   before = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_list_run_steps(   thread_id,   run_id,   limit = NULL,   order = NULL,   after = NULL,   before = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_retrieve_run(thread_id, run_id, .classify_response = TRUE, .async = FALSE)  oai_modify_run(   thread_id,   run_id,   metadata = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_cancel_run(thread_id, run_id, .classify_response = TRUE, .async = FALSE)  oai_submit_tool_outputs(   thread_id,   run_id,   tool_outputs,   stream = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_tool_output(tool_call_id, output)  oai_retrieve_run_step(   thread_id,   run_id,   step_id,   .classify_response = TRUE,   .async = FALSE )"},{"path":"https://robonomist.github.io/openaiapi/reference/run_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run API — run_api","text":"thread_id Character. ID thread run. assistant_id Character. ID assistant use execute run. model Character. ID Model used execute run. value provided , override model associated assistant. , model associated assistant used. instructions Character. Overrides instructions assistant. useful modifying behavior per-run basis. additional_instructions Character. Appends additional instructions end instructions run. useful modifying behavior per-run basis without overriding instructions. additional_messages Character. Adds additional messages thread creating run. tools Character. Override tools assistant can use run. useful modifying behavior per-run basis. metadata List. Optional. named list 16 key-value pairs can attached object. can useful storing additional information object structured format, querying objects via API dashboard. temperature Numeric. sampling temperature use, 0 2. Higher values like 0.8 make output random, lower values like 0.2 make focused deterministic. top_p Numeric. alternative sampling temperature, called nucleus sampling, model considers results tokens top_p probability mass. 0.1 means tokens comprising top 10% probability mass considered. stream Logical. TRUE, function return RunStream object. max_prompt_tokens Integer. maximum number prompt tokens may used course run. run make best effort use number prompt tokens specified, across multiple turns run. run exceeds number prompt tokens specified, run end status incomplete. See incomplete_details info. max_completion_tokens Integer. maximum number completion tokens may used course run. run make best effort use number completion tokens specified, across multiple turns run. run exceeds number completion tokens specified, run end status incomplete. See incomplete_details info. truncation_strategy Object. Controls thread truncated prior run. Use control intial context window run. tool_choice Character. Controls () tool called model. none means model call tools instead generates message. auto default value means model can pick generating message calling one tools. required means model must call one tools responding user. response_format Character. Specifies format model must output. Compatible GPT-4o, GPT-4 Turbo, GPT-3.5 Turbo models since gpt-3.5-turbo-1106. .classify_response Logical. TRUE (default), response classified R6 object. FALSE, response returned list. .async Logical. TRUE, request performed asynchronously. thread List. named list thread parameters: \"messages\" (List), \"tool_resources\" (List), \"metadata\" (List). tool_resources List. list resources used assistant's tools. resources specific type tool. example, code_interpreter tool requires list file IDs, file_search tool requires list vector store IDs. limit Integer. Optional. limit number objects returned. Limit can range 1 100, default 20. order Character. Optional. Sort order created_at timestamp objects. \"asc\" ascending order \"desc\" descending order. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch next page list. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch previous page list. run_id Character. ID run. tool_outputs List tool outputs. tool_call_id Character. ID tool call required_action object within run object output submitted . output Character. output tool call submitted continue run. step_id Character. ID step.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/run_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run API — run_api","text":"Run R6 object. oai_list_runs() returns list Run objects. oai_list_run_steps() returns list RunStep objects. oai_modify_run() returns Run object. oai_cancel_run() returns Run object. oai_submit_tool_outputs() returns Run object. oai_retrieve_run_step() returns RunStep object.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/thread_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Threads API — thread_api","title":"Threads API — thread_api","text":"Manage threads assistants can interact . oai_create_thread(): Create new thread assistants can interact . oai_modify_thread(): Modify thread. oai_retrieve_thread(): Retrieve thread. oai_delete_thread(): Delete thread.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/thread_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Threads API — thread_api","text":"","code":"oai_create_thread(   messages = NULL,   tool_resources = NULL,   metadata = NULL,   .classify_response = TRUE )  oai_modify_thread(   thread_id,   tool_resources = NULL,   metadata = NULL,   .classify_response = TRUE )  oai_retrieve_thread(thread_id, .classify_response = TRUE, .async = FALSE)  oai_delete_thread(thread_id)"},{"path":"https://robonomist.github.io/openaiapi/reference/thread_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Threads API — thread_api","text":"messages list oai_messages start thread . tool_resources list tool resources available assistant. metadata List. Optional. Set 16 key-value pairs can attached object. can useful storing additional information object structured format. Keys can maximum 64 characters long values can maximum 512 characters long. .classify_response Logical. TRUE (default), response classified R6 object. FALSE, response returned list. thread_id ID thread. .async Logical. TRUE, request performed asynchronously.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/utils.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for message arguments — oai_message","title":"A helper function for message arguments — oai_message","text":"helper function message arguments helper function thread arguments helper function tool resource arguments","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/utils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for message arguments — oai_message","text":"","code":"oai_message(content, role = \"user\", attachments = NULL, metadata = NULL, ...)  oai_thread(messages, tool_resources = NULL, metadata = NULL)  oai_tool_resource(code_interpreter_file_ids = NULL, vector_store_ids = NULL)"},{"path":"https://robonomist.github.io/openaiapi/reference/utils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for message arguments — oai_message","text":"content Character. content message. role Character. role sender (default \"user\"). attachments List NULL. Optional. Attachments include message. metadata List NULL. Optional. Metadata include thread. ... Additional values pass API. messages list oai_message objects character vector. tool_resources List. Optional. list tool resources include thread. code_interpreter_file_ids, Character vector file IDs fore code interpreter use. vector_store_ids, Character vector vector store IDs file search use.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/utils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for message arguments — oai_message","text":"structured list representing message.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/vector_store_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Store API — vector_store_api","title":"Vector Store API — vector_store_api","text":"Vector stores used store files use file_search tool. oai_create_vector_store(): Create new vector store. oai_list_vector_stores(): List vector stores. oai_retrieve_vector_store(): Retrieve specific vector store. oai_modify_vector_store(): Modify specific vector store. oai_delete_vector_store(): Delete specific vector store. oai_search_vector_store(): Search specific vector store.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/vector_store_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Store API — vector_store_api","text":"","code":"oai_create_vector_store(   file_ids = NULL,   name = NULL,   expires_after = NULL,   chunking_strategy = NULL,   metadata = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_list_vector_stores(   limit = NULL,   order = NULL,   after = NULL,   before = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_retrieve_vector_store(   vector_store_id,   .classify_response = TRUE,   .async = FALSE )  oai_modify_vector_store(   vector_store_id,   name = NULL,   expires_after = NULL,   metadata = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_delete_vector_store(vector_store_id, .async = FALSE)  oai_search_vector_store(   vector_store_id,   query,   filters = NULL,   max_num_results = NULL,   ranking_options = NULL,   rewrite_query = NULL,   .classify_response = TRUE,   .async = FALSE )"},{"path":"https://robonomist.github.io/openaiapi/reference/vector_store_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Store API — vector_store_api","text":"file_ids Character. Optional. vector file IDs include vector store. name Character. Optional. name vector store. expires_after List. Optional. Expiration time vector store seconds. chunking_strategy List. Optional. Strategy chunking data. metadata List. Optional. Set 16 key-value pairs can attached object. can useful storing additional information object structured format. Keys can maximum 64 characters long values can maximum 512 characters long. .classify_response Logical. TRUE (default), response classified R6 object. FALSE, response returned list. .async Logical. TRUE, request performed asynchronously. limit Integer. Optional. limit number objects returned. Limit can range 1 100, default 20. order Character. Optional. Sort order created_at timestamp objects. \"asc\" ascending order \"desc\" descending order. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch next page list. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch previous page list. vector_store_id Character. ID vector store retrieve. query Character. query string search. filters List. Optional. filter apply based file attributes. max_num_results Integer. Optional. maximum number results return (1-50). ranking_options List. Optional. Ranking options search. rewrite_query Logical. Optional. Whether rewrite natural language query vector search.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/vector_store_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Store API — vector_store_api","text":"VectorStore R6 object. oai_list_vector_stores() returns list VectorStore objects. Deletion status. oai_search_vector_store() returns list search results vector store.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/vector_store_file_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector store files API — vector_store_file_api","title":"Vector store files API — vector_store_file_api","text":"Vector store files represent files inside vector store. oai_create_vector_store_file(): Create new file vector store. oai_list_vector_store_files(): List files vector store. oai_retrieve_vector_store_file(): Retrieve specific file vector store. oai_update_vector_store_file(): Update attributes vector store file. oai_delete_vector_store_file(): Delete file vector store.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/vector_store_file_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector store files API — vector_store_file_api","text":"","code":"oai_create_vector_store_file(   vector_store_id,   file_id,   chunking_strategy = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_list_vector_store_files(   vector_store_id,   limit = NULL,   order = NULL,   after = NULL,   before = NULL,   filter = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_retrieve_vector_store_file(   vector_store_id,   file_id,   .classify_response = TRUE,   .async = FALSE )  oai_update_vector_store_file(   vector_store_id,   file_id,   attributes,   .classify_response = TRUE,   .async = FALSE )  oai_delete_vector_store_file(vector_store_id, file_id, .async = FALSE)"},{"path":"https://robonomist.github.io/openaiapi/reference/vector_store_file_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector store files API — vector_store_file_api","text":"vector_store_id Character. ID vector store. file_id Character. ID file added vector store. chunking_strategy List. Optional. Strategy chunking data. .classify_response Logical. TRUE (default), response classified R6 object. FALSE, response returned list. .async Logical. TRUE, request performed asynchronously. limit Integer. Optional. limit number objects returned. Limit can range 1 100, default 20. order Character. Optional. Sort order created_at timestamp objects. \"asc\" ascending order \"desc\" descending order. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch next page list. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch previous page list. filter Character. Optional. Filter file status. One \"in_progress\", \"completed\", \"failed\", \"cancelled\". attributes Named list. list attributes update, maximum 16 key-value pairs. Keys strings maximum length 64 characters. Values strings maximum length 512 characters, booleans, numbers.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/vector_store_file_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector store files API — vector_store_file_api","text":"VectorStoreFile R6 object. List VectorStoreFile R6 objects. Deletion status.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/vector_store_file_batch_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector store file batch API — vector_store_file_batch_api","title":"Vector store file batch API — vector_store_file_batch_api","text":"Vector store file batches represent operations add multiple files vector store. oai_create_vector_store_file_batch(): Create file batch vector store. oai_retrieve_vector_store_file_batch(): Retrieve specific file batch vector store. oai_delete_vector_store_file_batch(): Delete specific file batch vector store. oai_list_vector_store_files_in_a_batch(): List files file batch.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/vector_store_file_batch_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector store file batch API — vector_store_file_batch_api","text":"","code":"oai_create_vector_store_file_batch(   vector_store_id,   file_ids,   chunking_strategy = NULL,   .classify_response = TRUE,   .async = FALSE )  oai_retrieve_vector_store_file_batch(   vector_store_id,   batch_id,   .classify_response = TRUE,   .async = FALSE )  oai_cancel_vector_store_file_batch(vector_store_id, batch_id, .async = FALSE)  oai_list_vector_store_files_in_a_batch(   vector_store_id,   batch_id,   limit = NULL,   order = NULL,   after = NULL,   before = NULL,   filter = NULL,   .classify_response = TRUE,   .async = FALSE )"},{"path":"https://robonomist.github.io/openaiapi/reference/vector_store_file_batch_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector store file batch API — vector_store_file_batch_api","text":"vector_store_id Character. ID vector store file batch created. file_ids Character. vector file IDs include batch. chunking_strategy List. Optional. Strategy chunking data. .classify_response Logical. TRUE (default), response classified R6 object. FALSE, response returned list. .async Logical. TRUE, request performed asynchronously. batch_id Character. ID batch retrieve. limit Integer. Optional. limit number objects returned. Limit can range 1 100, default 20. order Character. Optional. Sort order created_at timestamp objects. \"asc\" ascending order \"desc\" descending order. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch next page list. Character. Optional. cursor use pagination. object ID defines place list. instance, make list request receive 100 objects, ending obj_foo, subsequent call can include = \"obj_foo\" order fetch previous page list. filter Character. Optional. Filter files based certain criteria.","code":""},{"path":"https://robonomist.github.io/openaiapi/reference/vector_store_file_batch_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector store file batch API — vector_store_file_batch_api","text":"VectorStoreFilesBatch R6 object. oai_list_vector_store_files_in_a_batch() returns list VectorStoreFile objects.","code":""}]
