% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assistant.R
\name{Assistant}
\alias{Assistant}
\title{Assistant R6 class}
\description{
This class provides methods to interact with the OpenAI Assistant API.
}
\section{Super class}{
\code{openaiapi::Utils} -> \code{Assistant}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{The ID of the assistant.}

\item{\code{created_at}}{The creation time of the assistant.}

\item{\code{name}}{The name of the assistant.}

\item{\code{description}}{The description of the assistant.}

\item{\code{model}}{ID of the model to use. You can use the \code{oai_list_models()} function to see all of your available models.}

\item{\code{instructions}}{The system instructions that the assistant uses.}

\item{\code{tools}}{A list of tool enabled on the assistant.}

\item{\code{tool_resources}}{A set of resources that are used by the assistant's tools.}

\item{\code{metadata}}{Set of 16 key-value pairs that can be attached to an object.}

\item{\code{temperature}}{Sampling temperature.}

\item{\code{top_p}}{An alternative to sampling with temperature, called nucleus sampling.}

\item{\code{response_format}}{The response format of the assistant.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Assistant-new}{\code{Assistant$new()}}
\item \href{#method-Assistant-modify}{\code{Assistant$modify()}}
\item \href{#method-Assistant-retrieve}{\code{Assistant$retrieve()}}
\item \href{#method-Assistant-delete}{\code{Assistant$delete()}}
\item \href{#method-Assistant-print}{\code{Assistant$print()}}
\item \href{#method-Assistant-thread_and_run}{\code{Assistant$thread_and_run()}}
\item \href{#method-Assistant-clone}{\code{Assistant$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Assistant-new"></a>}}
\if{latex}{\out{\hypertarget{method-Assistant-new}{}}}
\subsection{Method \code{new()}}{
Initializes the OpenAI Assistant object. You must provide either an assistant ID or a model. If you provide an assistant ID, the assistant is retrieved from the API. If you provide a model, a new assistant is created, and \code{...} argument is used to pass additional arguments to the \code{oai_create_assistant()} function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Assistant$new(
  assistant_id = NULL,
  model = NULL,
  ...,
  resp = NULL,
  .async = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{assistant_id}}{Character. The ID of the assistant to retrieve.}

\item{\code{model}}{Character. ID of the model to use. You can use the \code{oai_list_models()} to see all of your available models.}

\item{\code{...}}{Additional arguments passed to the \verb{oai_*_assistant()} functions.}

\item{\code{resp}}{List. The assistant's properties from the API response.}

\item{\code{.async}}{Logical. If \code{TRUE}, requests are made asynchronously.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An instance of the OpenAI_Assistant class.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Assistant-modify"></a>}}
\if{latex}{\out{\hypertarget{method-Assistant-modify}{}}}
\subsection{Method \code{modify()}}{
Modify the assistant's properties. The \code{...} argument is used to pass additional arguments to the \code{oai_modify_assistant()} function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Assistant$modify(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Additional arguments passed to the \verb{oai_*_assistant()} functions.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Assistant-retrieve"></a>}}
\if{latex}{\out{\hypertarget{method-Assistant-retrieve}{}}}
\subsection{Method \code{retrieve()}}{
Retrieve the assistant's properties from the API.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Assistant$retrieve()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The up-to-date version of OpenAI_Assistant instance.
Delete the assistant
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Assistant-delete"></a>}}
\if{latex}{\out{\hypertarget{method-Assistant-delete}{}}}
\subsection{Method \code{delete()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Assistant$delete()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Deletion status
Print the assistant's details
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Assistant-print"></a>}}
\if{latex}{\out{\hypertarget{method-Assistant-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Assistant$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Additional arguments (unused).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The OpenAI_Assistant instance.
Create a thread and run the assistant
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Assistant-thread_and_run"></a>}}
\if{latex}{\out{\hypertarget{method-Assistant-thread_and_run}{}}}
\subsection{Method \code{thread_and_run()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Assistant$thread_and_run(thread = NULL, messages = NULL, ..., .async = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{thread}}{An oai_thread object.}

\item{\code{messages}}{Alternatively, a list of messages to create a thread.}

\item{\code{...}}{Additional arguments passed to \code{oai_create_thread_and_run()}.}

\item{\code{.async}}{Logical. If \code{TRUE}, requests are made asynchronously.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The response from the thread creation and run.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Assistant-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Assistant-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Assistant$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
